Search.setIndex({"docnames": ["api/CerebNet", "api/CerebNet_dataloader", "api/CerebNet_datasets", "api/CerebNet_models", "api/CerebNet_utils", "api/FastSurferCNN", "api/FastSurferCNN.data_loader", "api/FastSurferCNN.models", "api/FastSurferCNN.utils", "api/generated/CerebNet.apply_warp", "api/generated/CerebNet.data_loader.augmentation", "api/generated/CerebNet.data_loader.data_utils", "api/generated/CerebNet.data_loader.dataset", "api/generated/CerebNet.data_loader.loader", "api/generated/CerebNet.datasets.generate_hdf5", "api/generated/CerebNet.datasets.load_data", "api/generated/CerebNet.datasets.utils", "api/generated/CerebNet.datasets.wm_merge_clean", "api/generated/CerebNet.inference", "api/generated/CerebNet.models.networks", "api/generated/CerebNet.models.sub_module", "api/generated/CerebNet.run_prediction", "api/generated/CerebNet.utils.checkpoint", "api/generated/CerebNet.utils.load_config", "api/generated/CerebNet.utils.lr_scheduler", "api/generated/CerebNet.utils.meters", "api/generated/CerebNet.utils.metrics", "api/generated/CerebNet.utils.misc", "api/generated/FastSurferCNN.data_loader.augmentation", "api/generated/FastSurferCNN.data_loader.conform", "api/generated/FastSurferCNN.data_loader.data_utils", "api/generated/FastSurferCNN.data_loader.dataset", "api/generated/FastSurferCNN.data_loader.loader", "api/generated/FastSurferCNN.download_checkpoints", "api/generated/FastSurferCNN.generate_hdf5", "api/generated/FastSurferCNN.inference", "api/generated/FastSurferCNN.models.interpolation_layer", "api/generated/FastSurferCNN.models.losses", "api/generated/FastSurferCNN.models.networks", "api/generated/FastSurferCNN.models.sub_module", "api/generated/FastSurferCNN.quick_qc", "api/generated/FastSurferCNN.reduce_to_aseg", "api/generated/FastSurferCNN.run_prediction", "api/generated/FastSurferCNN.segstats", "api/generated/FastSurferCNN.utils.arg_types", "api/generated/FastSurferCNN.utils.checkpoint", "api/generated/FastSurferCNN.utils.common", "api/generated/FastSurferCNN.utils.load_config", "api/generated/FastSurferCNN.utils.logging", "api/generated/FastSurferCNN.utils.lr_scheduler", "api/generated/FastSurferCNN.utils.mapper", "api/generated/FastSurferCNN.utils.meters", "api/generated/FastSurferCNN.utils.metrics", "api/generated/FastSurferCNN.utils.misc", "api/generated/FastSurferCNN.utils.parser_defaults", "api/generated/FastSurferCNN.utils.run_tools", "api/generated/FastSurferCNN.utils.threads", "api/generated/FastSurferCNN.version", "api/generated/recon_surf.N4_bias_correct", "api/generated/recon_surf.align_points", "api/generated/recon_surf.align_seg", "api/generated/recon_surf.create_annotation", "api/generated/recon_surf.fs_balabels", "api/generated/recon_surf.lta", "api/generated/recon_surf.map_surf_label", "api/generated/recon_surf.paint_cc_into_pred", "api/generated/recon_surf.rewrite_mc_surface", "api/generated/recon_surf.rotate_sphere", "api/generated/recon_surf.sample_parc", "api/generated/recon_surf.smooth_aparc", "api/generated/recon_surf.spherically_project_wrapper", "api/index", "api/recon_surf", "index", "overview/CODE_OF_CONDUCT", "overview/CONTRIBUTING", "overview/EDITING", "overview/EXAMPLES", "overview/FLAGS", "overview/INSTALL", "overview/OUTPUT_FILES", "overview/README", "overview/SECURITY", "overview/index", "scripts/index", "scripts/slurm"], "filenames": ["api/CerebNet.rst", "api/CerebNet_dataloader.rst", "api/CerebNet_datasets.rst", "api/CerebNet_models.rst", "api/CerebNet_utils.rst", "api/FastSurferCNN.rst", "api/FastSurferCNN.data_loader.rst", "api/FastSurferCNN.models.rst", "api/FastSurferCNN.utils.rst", "api/generated/CerebNet.apply_warp.rst", "api/generated/CerebNet.data_loader.augmentation.rst", "api/generated/CerebNet.data_loader.data_utils.rst", "api/generated/CerebNet.data_loader.dataset.rst", "api/generated/CerebNet.data_loader.loader.rst", "api/generated/CerebNet.datasets.generate_hdf5.rst", "api/generated/CerebNet.datasets.load_data.rst", "api/generated/CerebNet.datasets.utils.rst", "api/generated/CerebNet.datasets.wm_merge_clean.rst", "api/generated/CerebNet.inference.rst", "api/generated/CerebNet.models.networks.rst", "api/generated/CerebNet.models.sub_module.rst", "api/generated/CerebNet.run_prediction.rst", "api/generated/CerebNet.utils.checkpoint.rst", "api/generated/CerebNet.utils.load_config.rst", "api/generated/CerebNet.utils.lr_scheduler.rst", "api/generated/CerebNet.utils.meters.rst", "api/generated/CerebNet.utils.metrics.rst", "api/generated/CerebNet.utils.misc.rst", "api/generated/FastSurferCNN.data_loader.augmentation.rst", "api/generated/FastSurferCNN.data_loader.conform.rst", "api/generated/FastSurferCNN.data_loader.data_utils.rst", "api/generated/FastSurferCNN.data_loader.dataset.rst", "api/generated/FastSurferCNN.data_loader.loader.rst", "api/generated/FastSurferCNN.download_checkpoints.rst", "api/generated/FastSurferCNN.generate_hdf5.rst", "api/generated/FastSurferCNN.inference.rst", "api/generated/FastSurferCNN.models.interpolation_layer.rst", "api/generated/FastSurferCNN.models.losses.rst", "api/generated/FastSurferCNN.models.networks.rst", "api/generated/FastSurferCNN.models.sub_module.rst", "api/generated/FastSurferCNN.quick_qc.rst", "api/generated/FastSurferCNN.reduce_to_aseg.rst", "api/generated/FastSurferCNN.run_prediction.rst", "api/generated/FastSurferCNN.segstats.rst", "api/generated/FastSurferCNN.utils.arg_types.rst", "api/generated/FastSurferCNN.utils.checkpoint.rst", "api/generated/FastSurferCNN.utils.common.rst", "api/generated/FastSurferCNN.utils.load_config.rst", "api/generated/FastSurferCNN.utils.logging.rst", "api/generated/FastSurferCNN.utils.lr_scheduler.rst", "api/generated/FastSurferCNN.utils.mapper.rst", "api/generated/FastSurferCNN.utils.meters.rst", "api/generated/FastSurferCNN.utils.metrics.rst", "api/generated/FastSurferCNN.utils.misc.rst", "api/generated/FastSurferCNN.utils.parser_defaults.rst", "api/generated/FastSurferCNN.utils.run_tools.rst", "api/generated/FastSurferCNN.utils.threads.rst", "api/generated/FastSurferCNN.version.rst", "api/generated/recon_surf.N4_bias_correct.rst", "api/generated/recon_surf.align_points.rst", "api/generated/recon_surf.align_seg.rst", "api/generated/recon_surf.create_annotation.rst", "api/generated/recon_surf.fs_balabels.rst", "api/generated/recon_surf.lta.rst", "api/generated/recon_surf.map_surf_label.rst", "api/generated/recon_surf.paint_cc_into_pred.rst", "api/generated/recon_surf.rewrite_mc_surface.rst", "api/generated/recon_surf.rotate_sphere.rst", "api/generated/recon_surf.sample_parc.rst", "api/generated/recon_surf.smooth_aparc.rst", "api/generated/recon_surf.spherically_project_wrapper.rst", "api/index.rst", "api/recon_surf.rst", "index.rst", "overview/CODE_OF_CONDUCT.md", "overview/CONTRIBUTING.md", "overview/EDITING.md", "overview/EXAMPLES.md", "overview/FLAGS.md", "overview/INSTALL.md", "overview/OUTPUT_FILES.md", "overview/README.md", "overview/SECURITY.md", "overview/index.rst", "scripts/index.rst", "scripts/slurm.md"], "titles": ["API CerebNet References", "API CerebNet_dataloader References", "API CerebNet_datasets References", "API CerebNet_models References", "API CerebNet_utils References", "API References", "API data_loader References", "API models References", "API utils References", "CerebNet.apply_warp", "CerebNet.data_loader.augmentation", "CerebNet.data_loader.data_utils", "CerebNet.data_loader.dataset", "CerebNet.data_loader.loader", "CerebNet.datasets.generate_hdf5", "CerebNet.datasets.load_data", "CerebNet.datasets.utils", "CerebNet.datasets.wm_merge_clean", "CerebNet.inference", "CerebNet.models.networks", "CerebNet.models.sub_module", "CerebNet.run_prediction", "CerebNet.utils.checkpoint", "CerebNet.utils.load_config", "CerebNet.utils.lr_scheduler", "CerebNet.utils.meters", "CerebNet.utils.metrics", "CerebNet.utils.misc", "FastSurferCNN.data_loader.augmentation", "FastSurferCNN.data_loader.conform", "FastSurferCNN.data_loader.data_utils", "FastSurferCNN.data_loader.dataset", "FastSurferCNN.data_loader.loader", "FastSurferCNN.download_checkpoints", "FastSurferCNN.generate_hdf5", "FastSurferCNN.inference", "FastSurferCNN.models.interpolation_layer", "FastSurferCNN.models.losses", "FastSurferCNN.models.networks", "FastSurferCNN.models.sub_module", "FastSurferCNN.quick_qc", "FastSurferCNN.reduce_to_aseg", "FastSurferCNN.run_prediction", "FastSurferCNN.segstats", "FastSurferCNN.utils.arg_types", "FastSurferCNN.utils.checkpoint", "FastSurferCNN.utils.common", "FastSurferCNN.utils.load_config", "FastSurferCNN.utils.logging", "FastSurferCNN.utils.lr_scheduler", "FastSurferCNN.utils.mapper", "FastSurferCNN.utils.meters", "FastSurferCNN.utils.metrics", "FastSurferCNN.utils.misc", "FastSurferCNN.utils.parser_defaults", "FastSurferCNN.utils.run_tools", "FastSurferCNN.utils.threads", "FastSurferCNN.version", "recon_surf.N4_bias_correct", "recon_surf.align_points", "recon_surf.align_seg", "recon_surf.create_annotation", "recon_surf.fs_balabels", "recon_surf.lta", "recon_surf.map_surf_label", "recon_surf.paint_cc_into_pred", "recon_surf.rewrite_mc_surface", "recon_surf.rotate_sphere", "recon_surf.sample_parc", "recon_surf.smooth_aparc", "recon_surf.spherically_project_wrapper", "FastSurfer API", "API recon_surf References", "Welcome to FastSurfer\u2019s documentation!", "Contributor Covenant Code of Conduct", "Contributing to FastSurfer", "Manual Edits", "Examples", "FastSurfer Flags", "Installation", "Output files", "Overview", "Security Policy", "Overview", "Scripts", "SLURM: srun_fastsurfer.sh"], "terms": {"main": [9, 21, 38, 43, 46, 57, 61, 69, 79, 81], "img_path": 9, "lbl_path": 9, "warp_path": 9, "result_path": 9, "patch_siz": [9, 12, 43], "sourc": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81], "load": [9, 12, 13, 14, 15, 18, 23, 27, 29, 30, 31, 32, 34, 35, 43, 45, 47, 53, 54, 64, 76], "warp": 9, "crop": [9, 16, 28, 29, 36, 38, 43], "save": [9, 17, 22, 30, 42, 45, 53, 63, 66, 69, 76, 77, 78], "both": [9, 52, 74, 78, 79, 85], "an": [9, 10, 11, 16, 21, 24, 29, 30, 43, 44, 45, 46, 50, 52, 57, 58, 61, 63, 68, 69, 74, 76, 77, 78, 79, 80, 81], "imag": [9, 10, 11, 14, 16, 17, 19, 20, 26, 28, 29, 30, 31, 34, 35, 36, 38, 39, 42, 43, 50, 53, 58, 60, 68, 76, 77, 78, 79, 80, 83], "its": [9, 10, 42, 43, 50, 55, 58, 69, 74, 77, 79], "correspond": [9, 10, 11, 20, 30, 39, 43, 46, 50, 61, 64, 68, 69, 80], "label": [9, 10, 11, 16, 17, 25, 27, 28, 30, 31, 34, 37, 43, 50, 51, 53, 58, 60, 61, 64, 67, 68, 69, 75, 80, 81], "base": [9, 10, 19, 21, 26, 46, 50, 60, 75, 77, 78, 79, 80, 81], "given": [9, 14, 16, 21, 23, 24, 26, 28, 30, 32, 34, 42, 44, 45, 46, 47, 61, 68, 77, 81], "field": [9, 10, 29, 43, 58, 63, 76, 81], "paramet": [9, 10, 11, 15, 16, 17, 20, 21, 22, 24, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 77], "str": [9, 11, 16, 21, 26, 28, 30, 32, 34, 35, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 57, 58, 61, 62, 63, 64, 66, 68, 69, 70], "path": [9, 10, 27, 30, 34, 42, 43, 45, 46, 48, 53, 54, 57, 60, 61, 64, 66, 76, 77, 78, 79, 81], "t1": [9, 35, 77, 78, 79, 83], "weight": [9, 10, 11, 19, 27, 28, 30, 31, 34, 37, 38, 43, 76, 77], "mri": [9, 10, 30, 31, 76, 77, 78, 79, 80, 81], "similarli": [9, 75, 79], "file": [9, 12, 14, 30, 31, 34, 35, 42, 43, 45, 46, 47, 54, 57, 58, 61, 63, 64, 66, 68, 69, 75, 76, 77, 78, 79, 83, 85], "us": [9, 10, 11, 16, 24, 26, 29, 30, 34, 35, 38, 42, 43, 45, 46, 50, 52, 54, 74, 75, 76, 77, 78, 79, 80, 82, 83], "directori": [9, 14, 34, 42, 45, 46, 54, 57, 61, 75, 76, 77, 78, 79, 80, 81, 85], "where": [9, 10, 11, 16, 24, 26, 43, 50, 54, 60, 61, 64, 68, 69, 76, 77, 78, 79], "tupl": [9, 28, 29, 30, 35, 42, 43, 50, 52, 58, 64, 68], "int": [9, 11, 16, 21, 22, 24, 26, 29, 30, 34, 35, 37, 42, 43, 44, 45, 46, 50, 51, 52, 53, 56, 57, 58, 60, 68, 69, 70], "The": [9, 10, 11, 16, 20, 21, 22, 23, 24, 26, 29, 30, 35, 37, 38, 39, 42, 43, 44, 45, 46, 50, 54, 55, 57, 58, 59, 61, 64, 68, 70, 74, 75, 76, 77, 78, 79, 80, 81, 85], "dimens": [9, 11, 16, 26, 29, 38], "height": [9, 35, 38], "width": [9, 35, 38, 43, 60], "depth": 9, "after": [9, 20, 38, 39, 50, 55, 57, 76, 77, 79, 80, 81], "save_nii_imag": 9, "img_data": [9, 17, 30], "save_path": [9, 17], "header": [9, 17, 29, 30, 43, 50, 63, 64, 66], "affin": [9, 10, 17, 29, 30, 56, 59, 60], "data": [9, 11, 13, 15, 16, 17, 18, 24, 26, 29, 30, 32, 35, 36, 38, 39, 42, 43, 44, 50, 66, 68, 76, 77, 78, 79, 80, 81, 85], "arrai": [9, 10, 11, 16, 29, 30, 40, 43, 50, 52, 63, 64, 65, 68, 69], "nifti": [9, 29, 30], "ndarrai": [9, 10, 11, 16, 28, 29, 30, 31, 34, 35, 40, 42, 43, 50, 52, 53, 58, 59, 60, 61, 64, 67, 68, 69], "includ": [9, 10, 11, 18, 30, 43, 46, 50, 57, 69, 74, 75, 77, 78, 79, 80, 81, 82], "name": [9, 11, 30, 31, 34, 35, 43, 45, 46, 50, 53, 54, 57, 61, 62, 64, 66, 68, 69, 76, 77, 78, 81, 85], "nibabel": [9, 30, 68, 69], "nifti1head": 9, "inform": [9, 16, 29, 30, 43, 44, 57, 61, 66, 74, 75, 79, 81], "matrix": [9, 43, 52, 53, 58, 59, 60, 67, 68, 69], "class": [10, 11, 12, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 57, 81], "randomaffin": 10, "cfg": [10, 12, 13, 14, 15, 18, 22, 24, 25, 27, 31, 32, 35, 37, 38, 42, 45, 49, 51, 53], "appli": [10, 11, 20, 29, 39, 43, 46, 50, 58, 69, 74], "random": [10, 28], "transform": [10, 11, 12, 16, 26, 30, 31, 34, 50, 52, 58, 59, 60, 63, 77], "translat": 10, "rotat": [10, 59, 67], "scale": [10, 29, 35], "method": [10, 12, 14, 15, 18, 19, 20, 21, 24, 25, 26, 28, 31, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 50, 51, 52, 54, 55, 57, 75, 76, 81], "randombiasfield": 10, "seed": 10, "none": [10, 12, 15, 16, 24, 25, 26, 29, 30, 31, 35, 37, 38, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 57, 58, 60, 61, 64, 68, 69], "add": [10, 24, 28, 30, 34, 43, 54, 69, 75, 76, 77, 79, 80, 81], "bia": [10, 43, 58, 76, 78, 81], "artifact": 10, "http": [10, 21, 24, 74, 75, 77, 78, 79, 81], "github": [10, 75, 77, 79, 82], "com": [10, 75, 77, 79, 81], "fepegar": 10, "torchio": 10, "It": [10, 26, 27, 66, 75, 77, 79, 80, 85], "wa": [10, 34, 45, 46, 57, 66, 74, 76, 77, 78, 79, 85], "implement": [10, 21, 37, 50, 79], "niftynet": 10, "carol": 10, "sudr": 10, "et": [10, 21, 81], "al": [10, 21, 81], "2017": 10, "longitudin": 10, "segment": [10, 11, 19, 21, 23, 26, 29, 30, 34, 38, 40, 43, 46, 58, 60, 65, 79, 83], "ag": [10, 74], "relat": 10, "white": [10, 30, 58, 61, 64, 80], "matter": [10, 17, 30, 57, 58, 61, 80], "hyperintens": 10, "apply_transform": 10, "generate_bias_field": 10, "get_random_param": 10, "randomflip": 10, "horizont": 10, "flip": [10, 11], "randomlabelstoimag": 10, "mean": [10, 26, 28, 37, 43, 52, 58, 77, 78], "std": [10, 28], "blur_factor": 10, "0": [10, 16, 21, 24, 26, 28, 29, 30, 37, 39, 40, 43, 44, 46, 50, 55, 57, 58, 68, 69, 77, 78, 79, 81, 82], "3": [10, 20, 29, 30, 39, 57, 58, 68, 69, 81, 83], "gener": [10, 24, 30, 50, 57, 77, 78, 80, 81], "from": [10, 11, 16, 17, 20, 24, 27, 29, 30, 35, 39, 42, 43, 45, 46, 50, 53, 54, 57, 58, 59, 60, 61, 64, 68, 74, 75, 76, 77, 78, 79, 80, 81], "dataset": [10, 13, 32, 34, 71], "intens": [10, 29, 43, 58], "prior": 10, "billot": 10, "A": [10, 11, 20, 21, 30, 37, 42, 43, 44, 45, 46, 49, 50, 52, 54, 55, 57, 64, 75, 76, 77, 80, 81], "learn": [10, 21, 24, 49, 65, 81], "strategi": [10, 16], "contrast": [10, 77], "agnost": 10, "partial": [10, 43, 76, 78, 80, 81], "volum": [10, 11, 16, 26, 30, 40, 43, 66, 68, 76, 77, 78, 80, 81], "brain": [10, 58, 76, 77, 79, 80, 81], "scan": [10, 76], "ani": [10, 26, 29, 34, 42, 43, 46, 50, 52, 61, 70, 74, 75, 77, 79, 81], "resolut": [10, 35, 81], "totensor": [10, 28], "convert": [10, 26, 28, 30, 44, 50, 59], "sampl": [10, 28, 68], "tensor": [10, 16, 19, 20, 28, 30, 35, 36, 37, 38, 39, 42, 43, 52, 53], "totensortest": [10, 28], "sample_intensity_stats_from_imag": 10, "labels_list": 10, "classes_list": 10, "keep_strictly_posit": 10, "true": [10, 11, 20, 29, 30, 39, 43, 50, 55, 60, 61, 62, 69], "thi": [10, 11, 16, 21, 22, 26, 29, 30, 34, 35, 42, 43, 45, 46, 50, 52, 57, 65, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81], "function": [10, 11, 14, 16, 19, 20, 21, 25, 26, 27, 29, 37, 38, 43, 46, 50, 52, 55, 57, 61, 65, 66, 75, 79], "take": [10, 66, 74, 77], "input": [10, 19, 20, 26, 28, 29, 30, 34, 37, 38, 39, 43, 46, 50, 52, 57, 58, 66, 69, 75, 76, 77, 78, 83], "estim": [10, 40, 76, 77, 78, 80, 81], "all": [10, 11, 14, 16, 26, 30, 42, 46, 50, 55, 57, 61, 62, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 85], "specifi": [10, 16, 24, 26, 29, 42, 50, 61, 76, 77, 78], "valu": [10, 16, 24, 26, 29, 30, 35, 37, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 57, 58, 60, 61, 64, 68, 69, 75, 78], "can": [10, 16, 26, 29, 30, 37, 44, 46, 50, 52, 54, 57, 61, 64, 68, 69, 75, 76, 77, 78, 79, 81, 82, 85], "share": [10, 46], "same": [10, 11, 16, 19, 26, 29, 38, 43, 50, 57, 61, 64, 68, 70, 75, 76, 77, 79], "statist": [10, 43, 77, 78, 79, 80, 81], "being": [10, 82], "regroup": 10, "k": [10, 81], "array_lik": [10, 26], "which": [10, 17, 19, 24, 26, 29, 30, 38, 42, 43, 45, 54, 55, 57, 61, 64, 68, 74, 75, 76, 77, 78, 79, 80, 81, 85], "evalu": [10, 35], "deviat": [10, 28, 29], "must": [10, 16, 26, 29, 44, 78], "have": [10, 16, 26, 30, 46, 52, 59, 68, 74, 75, 76, 77, 78, 79, 80, 81, 85], "size": [10, 16, 28, 29, 30, 34, 35, 43, 44, 46, 64, 74, 78, 79], "list": [10, 30, 31, 34, 42, 43, 45, 46, 50, 53, 54, 57, 60, 61, 62, 64, 68, 69, 74, 78, 79], "sequenc": [10, 16, 26, 43, 50, 81], "1d": [10, 11], "numpi": [10, 16, 30, 40, 43, 44, 50, 64], "option": [10, 15, 16, 23, 26, 28, 29, 30, 35, 37, 38, 40, 41, 42, 43, 45, 46, 50, 52, 55, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 77, 79, 81, 83], "enabl": [10, 79], "group": [10, 26, 52, 55, 77, 79, 81], "structur": [10, 30, 80], "similar": [10, 26, 29, 43, 55, 76, 79, 81], "associ": [10, 36, 46, 50, 57, 85], "contribut": [10, 74, 82, 83], "gaussian": [10, 28, 39], "dure": [10, 79], "should": [10, 11, 16, 26, 29, 30, 43, 52, 53, 57, 59, 60, 61, 62, 69, 75, 76, 77, 78, 79, 81, 85], "length": [10, 26], "contain": [10, 11, 16, 26, 30, 35, 37, 43, 46, 50, 52, 54, 55, 57, 61, 68, 77, 78, 79, 80, 81], "between": [10, 26, 29, 30, 34, 44, 50, 69, 78, 81], "1": [10, 18, 20, 24, 26, 28, 29, 30, 37, 38, 39, 43, 44, 46, 50, 55, 58, 60, 68, 69, 74, 75, 78, 81, 83], "i": [10, 11, 16, 17, 21, 22, 26, 29, 30, 37, 40, 42, 43, 44, 45, 46, 49, 50, 52, 54, 55, 57, 58, 60, 61, 64, 66, 68, 69, 70, 74, 76, 77, 78, 79, 80, 81, 85], "total": [10, 37, 40, 56, 78], "number": [10, 11, 16, 19, 22, 24, 26, 27, 28, 29, 30, 34, 35, 38, 42, 43, 44, 45, 46, 52, 53, 56, 57, 58, 61, 64, 68, 69, 78, 79, 80], "By": [10, 26, 52, 55, 78], "default": [10, 11, 15, 16, 24, 26, 29, 30, 34, 35, 37, 38, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 67, 68, 69, 75, 77, 78, 79, 81], "each": [10, 11, 16, 17, 26, 30, 43, 52, 54, 64, 68, 69, 85], "consid": [10, 26, 29, 43, 61, 68, 74, 75, 78], "own": [10, 69, 75, 79], "len": 10, "whether": [10, 11, 15, 29, 30, 40, 43, 44, 45, 46, 50, 57, 61, 75, 78, 85], "onli": [10, 19, 29, 30, 34, 35, 38, 43, 61, 68, 75, 77, 78, 81], "keep": [10, 30, 50, 75], "strictli": [10, 78], "posit": [10, 28, 29, 36, 38, 43, 44, 74], "when": [10, 16, 26, 29, 42, 61, 68, 74, 76, 77, 83], "comput": [10, 19, 20, 26, 29, 35, 43, 52, 58, 68, 75, 76, 77, 81], "stat": [10, 25, 76, 77, 78, 80], "doesn": 10, "t": [10, 59, 60, 63, 75, 77, 79], "first": [10, 29, 50, 58, 68, 69, 70, 76, 79, 81], "label_list": 10, "class_list": 10, "provid": [10, 30, 44, 46, 50, 55, 75, 76, 77, 78, 79, 81], "we": [10, 17, 29, 46, 59, 61, 74, 75, 76, 78, 79, 80, 81], "zero": [10, 16, 28, 29, 43, 44, 64, 68], "background": [10, 26, 40, 58], "return": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70], "2": [10, 16, 20, 29, 30, 39, 43, 60, 68, 81, 82, 83], "row": 10, "second": [10, 46, 55, 76, 77, 79], "median": [10, 11, 27, 30, 34], "absolut": [10, 45, 46, 75, 77, 78], "robust": [10, 29, 43, 76], "create_weight_mask2d": 11, "label_map": 11, "class_wise_weight": 11, "max_edge_weight": [11, 30], "5": [11, 20, 30, 39, 43, 81, 83], "creat": [11, 13, 17, 30, 32, 34, 41, 42, 43, 45, 46, 50, 53, 61, 62, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81], "mask": [11, 12, 17, 30, 34, 41, 43, 58, 61, 69, 76, 77, 80], "frequenc": [11, 27, 30, 34], "balanc": [11, 30], "edg": [11, 28, 30, 34, 68, 69], "np": [11, 16, 28, 29, 30, 31, 34, 40, 42, 43, 52, 58, 64, 68, 69], "2d": [11, 37, 38, 69], "repres": [11, 34, 38, 39, 45, 46, 74], "map": [11, 16, 19, 20, 29, 30, 34, 39, 43, 46, 50, 53, 54, 61, 64, 65, 67, 77, 78, 80, 81], "element": [11, 16, 26, 30, 34, 46, 68], "float": [11, 24, 26, 29, 30, 35, 37, 40, 42, 43, 44, 46, 52, 55, 58, 59, 60, 67, 68], "maximum": [11, 26, 35, 43, 46, 50, 58], "emphas": 11, "boundari": [11, 68, 69], "filter_blank_slices_thick": [11, 16, 30], "data_dict": [11, 16], "img_kei": 11, "img": [11, 16, 27, 28, 29, 30, 31, 34, 60, 68], "lbl_kei": 11, "threshold": [11, 16, 29, 30, 34, 40, 42, 43, 58], "10": [11, 16, 21, 24, 78, 79, 81], "filter": [11, 16, 19, 30, 38, 43, 57, 69], "blank": [11, 16, 30, 34, 57], "slice": [11, 12, 16, 19, 29, 30, 34, 38, 43, 60, 78, 81], "dict": [11, 15, 16, 34, 35, 39, 42, 43, 45, 46, 50, 54, 63], "dictionari": [11, 15, 16, 30, 34, 43, 45, 50, 54, 57], "need": [11, 16, 22, 29, 30, 61, 68, 75, 76, 77, 78, 79, 80, 81], "kei": [11, 43, 50, 54, 57, 78], "target": [11, 16, 29, 37, 50, 58, 60, 61, 64, 75, 78], "voxel": [11, 16, 17, 29, 30, 34, 40, 43, 44, 58, 60, 68, 78], "so": [11, 16, 30, 45, 46, 58, 61, 64, 69, 75, 77, 78, 79, 80, 81, 85], "get_aseg_cereb_mask": 11, "aseg_map": 11, "get": [11, 19, 20, 24, 28, 29, 30, 31, 38, 39, 42, 45, 46, 56, 57, 58, 76, 77, 79, 83], "boolean": 11, "cerebellum": [11, 21, 78, 80, 81], "map_prediction_sagittal2ful": [11, 30], "prediction_sag": [11, 30], "lbl_type": 11, "remap": [11, 30], "predict": [11, 18, 19, 27, 30, 35, 38, 39, 42, 50, 52, 53, 78], "sagitt": [11, 30, 34, 35], "network": [11, 12, 24, 30, 31, 35, 45, 52, 71, 76, 78, 79, 81], "full": [11, 30, 34, 43, 46, 76, 77, 78, 79, 81], "space": [11, 16, 26, 29, 30, 50, 58, 60, 68, 74, 77, 78], "coron": [11, 30, 35], "axial": [11, 30, 34, 35], "type": [11, 16, 26, 27, 29, 30, 42, 43, 44, 45, 50, 54, 68, 75, 76], "map_sag2label": 11, "lbl_data": 11, "label_typ": [11, 16], "cereb_subseg": [11, 16, 17], "right": [11, 17, 30, 34, 49, 57, 60, 74, 77, 80], "id": [11, 15, 29, 30, 34, 43, 46, 50, 60, 61, 62, 64, 67, 68, 69, 76, 77, 78, 79, 81, 85], "left": [11, 17, 30, 34, 43, 49, 60, 77, 80], "relabel": 11, "string": [11, 29, 30, 35, 43, 44, 46, 57, 61, 64], "identifi": [11, 75, 85], "continu": [11, 61, 75, 76, 79], "slice_lia2ra": 11, "plane": [11, 12, 34, 35, 42, 45, 54], "thick_slic": 11, "fals": [11, 14, 15, 16, 18, 20, 26, 29, 30, 31, 39, 43, 45, 50, 55, 57, 60], "lia": [11, 29, 77], "ra": [11, 29, 30, 60, 64], "orient": [11, 29, 30, 74, 77, 78], "direct": [11, 68, 78, 79], "usual": [11, 26, 55, 64, 68, 69, 75, 78], "move": [11, 35, 64, 67, 77, 85], "batch": [11, 18, 20, 35, 36, 39, 53, 81], "shape": [11, 16, 29, 37, 43, 59, 68, 69], "channel": [11, 36], "h": [11, 37, 38, 39, 75, 77, 78], "w": [11, 37, 38, 39], "bool": [11, 15, 29, 30, 34, 35, 40, 43, 45, 46, 50, 52, 57, 60, 61, 62, 69], "ar": [11, 16, 19, 29, 30, 38, 43, 44, 46, 50, 54, 55, 57, 58, 61, 64, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85], "thick": [11, 30, 80, 81], "also": [11, 17, 24, 43, 50, 54, 57, 61, 64, 75, 76, 77, 78, 79, 81], "reorient": [11, 29], "slice_ras2lia": 11, "dtype": [11, 29, 30, 42, 44], "transform_axi": [11, 30], "vol": [11, 30], "coronal2axi": [11, 30], "axi": [11, 30, 34, 43], "back": [11, 30, 67, 79], "If": [11, 16, 26, 29, 34, 42, 43, 44, 46, 50, 54, 57, 64, 68, 70, 75, 76, 77, 78, 79, 81, 82, 85], "transform_axial2sagitt": 11, "axial2sagitt": 11, "transform_coron": 11, "axial2coron": 11, "transform_sagitt": [11, 30], "coronal2sagitt": [11, 30], "cerebdataset": 12, "dataset_path": [12, 31], "load_aux_data": [12, 14, 15], "aseg": [12, 17, 30, 31, 34, 58, 60, 65, 76, 77, 78, 80, 81], "augment": [12, 31, 71], "get_subject_nam": [12, 31, 42], "subjectdataset": 12, "img_org": 12, "brain_seg": 12, "slice_thick": [12, 30, 34], "primary_slic": 12, "singl": [12, 26, 35, 44, 77, 81], "subject": [12, 15, 31, 34, 42, 43, 46, 61, 64, 76, 78, 81, 83, 85], "loader": [12, 15, 35, 53, 71], "prepar": [12, 77], "process": [12, 15, 18, 20, 26, 30, 31, 34, 39, 42, 46, 52, 56, 57, 75, 78, 79, 80, 81, 83], "attribut": [12, 18, 24, 28, 34, 35, 36, 37, 38, 39, 42, 46, 50, 52, 55, 57, 83], "get_bounding_offset": 12, "get_nibabel_img": 12, "roi": [12, 81], "locate_mask_bbox": 12, "find": [12, 16, 17, 27, 29, 30, 43, 45, 46, 50, 53, 58, 59, 61, 64, 68, 75, 77, 79, 85], "largest": [12, 30, 68, 79], "connect": [12, 19, 20, 26, 30, 38, 39, 43], "compon": [12, 17, 26, 30, 52, 68, 75, 79], "bbox": 12, "min0": 12, "min1": 12, "max0": 12, "max1": 12, "set_plan": 12, "set": [12, 23, 24, 26, 27, 29, 30, 34, 35, 42, 46, 48, 50, 52, 53, 66, 69, 74, 77, 78, 79], "activ": [12, 39, 57, 77, 78, 79, 81], "properti": [12, 36, 42, 44, 46, 50], "testload": 12, "subject_path": 12, "data_cfg": 12, "get_img_metadata": 12, "get_label": 12, "get_orig": 12, "get_dataload": [13, 32], "mode": [13, 25, 32, 38, 43, 51, 69, 79], "pytorch": [13, 24, 32, 46], "arg": [13, 21, 23, 24, 26, 42, 43, 46, 47, 54, 55, 57], "train": [13, 24, 32, 45, 78], "val": [13, 32, 44], "test": [13, 32, 46, 75, 77, 78, 79, 81], "dataload": [13, 32, 35, 53], "cerebnetdataset": 14, "hdf5": [14, 34, 79], "create_hdf5_dataset": [14, 34], "subjects_list": [14, 77], "dataset_nam": [14, 34], "store_talairach": [14, 15], "store": [14, 15, 16, 43, 64, 77, 78, 79], "pattern": [14, 24, 34], "subjectload": 15, "aux_subjects_fil": 15, "load_subject": 15, "current_subject": 15, "miss": [15, 17, 25, 26, 27, 28, 30, 35, 37, 38, 39, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 76, 79, 85], "talairach": [15, 58, 77, 78], "coordin": [15, 30, 58, 64, 68], "auxiliari": 15, "load_test_subject": 15, "eval": [15, 35], "param": [15, 16, 19, 20, 27, 34, 38, 39], "bounding_volume_offset": 16, "target_img_s": 16, "image_shap": 16, "center": [16, 58], "non": [16, 43, 55, 68, 69, 79], "offset": [16, 29], "bound": [16, 30], "crop_transform": 16, "target_shap": [16, 36], "out": [16, 20, 35, 38, 39, 43, 46, 50, 55, 75, 76], "pad": [16, 28, 31], "perform": [16, 30, 35, 36, 46, 50, 58, 75, 76, 77, 78, 79, 81], "last": [16, 20, 22, 27, 39, 57], "n": [16, 30, 37, 38, 39, 58, 68, 69, 77], "doe": [16, 29, 30, 45, 54, 57, 65, 77, 78, 81], "interpol": [16, 29, 30, 36, 38, 39], "just": [16, 29, 61, 75, 76, 77, 79], "remov": [16, 44, 45, 68, 74, 77], "border": [16, 34, 43], "pixel": [16, 30], "neg": [16, 37, 44, 69], "lead": [16, 44, 54], "d_1": 16, "d_2": 16, "d_n": 16, "region": [16, 43, 58, 68, 69, 76], "less": [16, 76], "toward": [16, 20, 39, 74], "index": [16, 30, 37, 43, 50, 64], "defin": [16, 20, 26, 30, 39, 43, 46, 52, 69, 74, 76, 77, 78, 81], "els": [16, 26, 75], "dim": 16, "side": [16, 75], "deriv": [16, 78], "subtract": 16, "2x": 16, "specif": [16, 26, 29, 34, 35, 43, 45, 52, 74, 77, 78, 80, 81, 85], "mai": [16, 57, 74, 77, 78, 79, 80, 81], "implicitli": [16, 57], "view": [16, 19, 29, 35, 38, 78], "memori": [16, 46, 78, 79, 81, 85], "effici": [16, 79], "requir": [16, 43, 46, 49, 61, 83], "stack": [16, 30, 75], "rais": [16, 30, 37, 44, 45, 46, 49, 50, 54, 58, 59, 61, 63, 64, 76], "valueerror": [16, 49, 50, 58, 59, 61, 63, 64], "neither": [16, 44], "nor": 16, "typeerror": 16, "torch": [16, 24, 26, 30, 32, 35, 37, 42, 43, 45, 46, 49, 52, 53], "runtimeerror": [16, 30, 46, 50, 54], "dimension": [16, 30, 36, 58], "invalid": [16, 44, 58], "inconsist": [16, 30], "For": [16, 17, 24, 26, 27, 37, 44, 52, 64, 74, 75, 76, 77, 78, 79, 81, 85], "addit": [16, 29, 30, 43, 50, 77, 78, 79, 80], "refer": [16, 21, 24, 26, 43, 66, 71, 80, 83], "note": [16, 24, 26, 29, 43, 57, 65, 76, 77, 78, 79, 80, 81], "either": [16, 28, 29, 30, 35, 37, 45, 55, 57, 64, 75, 81], "map_label2subseg": 16, "mapped_subseg": 16, "look": [16, 30, 68, 75, 85], "up": [16, 23, 29, 30, 35, 38, 39, 42, 48, 68, 75, 76, 77, 81], "tabl": [16, 30, 43, 64, 68, 80], "subseg": 16, "map_siz": 16, "arr": [16, 43], "base_shap": 16, "return_bord": 16, "resiz": 16, "add_cereb_wm": 17, "manual_cereb": 17, "ad": [17, 43, 54, 65, 78, 79, 81], "cerebellar": [17, 81], "wm": [17, 30, 34, 58, 64, 76, 81], "freesurf": [17, 29, 30, 43, 59, 76, 77, 78, 80, 83], "fill": [17, 29, 43, 57, 66, 69, 76], "gap": 17, "dzne_manu": 17, "updat": [17, 24, 25, 26, 27, 35, 50, 52, 53, 75, 76, 79, 80, 81, 82], "cereb": [17, 81], "accordingli": [17, 27, 75], "cereb_subseg_lateral_mask": 17, "grai": [17, 30, 80], "correct_cereb_brainstem": 17, "brainstem": 17, "correct": [17, 30, 31, 43, 58, 64, 66, 74, 76, 77, 78, 79, 80, 81], "accord": [17, 30, 49, 64, 79], "other": [17, 29, 50, 74, 75, 76, 77, 79, 80, 83], "select": [17, 78, 80, 81], "drop_disconnected_compon": 17, "drop": [17, 30, 45, 62, 77], "smaller": [17, 29, 40, 69, 78], "disconnect": [17, 68], "filling_unknown_label": 17, "segmap": 17, "unknown_mask": 17, "candidate_lbl": 17, "unknown": [17, 30, 43, 62, 68], "candid": 17, "locating_unknown": 17, "gm_binari": 17, "wm_mask": 17, "e": [17, 21, 26, 29, 30, 44, 46, 52, 57, 60, 61, 64, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85], "hole": [17, 69], "save_mgh_imag": 17, "mgh": [17, 77, 78, 81], "sphere": [17, 61, 64, 67, 78], "radiu": [17, 58, 64, 68], "spheric": [17, 78], "binari": [17, 26, 30, 43, 58, 79], "thread": [18, 42, 43, 46, 71, 76, 77, 78], "async_io": 18, "devic": [18, 25, 26, 35, 39, 43, 46, 51, 52, 54, 77, 78, 79, 81], "auto": [18, 44, 46, 78], "viewagg_devic": [18, 54, 78, 81], "manag": [18, 75, 77, 79], "oper": [18, 20, 29, 39, 43, 68, 79], "model": [18, 26, 35, 42, 45, 52, 71, 80], "neuroimag": [18, 21, 81], "run": [18, 21, 35, 42, 46, 57, 70, 75, 76, 79, 80, 81, 83, 84], "fastsurfercnn": [19, 71, 78, 79, 81], "definit": [19, 38, 80], "fulli": [19, 38, 81], "competit": [19, 20, 38, 39], "spatial": [19, 38], "aggreg": [19, 35, 38, 78, 81], "7": [19, 38, 40, 75, 78, 79, 81], "middl": [19, 30, 38], "one": [19, 26, 29, 30, 38, 43, 44, 50, 52, 61, 69, 75, 77, 78, 79, 85], "per": [19, 29, 38, 43, 52, 77, 78, 80, 81], "layer": [19, 20, 30, 38, 39], "normal": [19, 38, 39, 43, 58, 68, 78], "64": [19, 20, 38, 39], "dens": [19, 20, 38, 39], "block": [19, 20, 38, 39, 55], "unpool": [19, 20, 38, 39], "instead": [19, 29, 38, 43, 54, 66, 70, 75, 76, 78, 79], "transpos": [19, 38], "convolut": [19, 20, 38, 39], "concatenation": [19, 38], "replac": [19, 30, 38, 68, 78, 79, 81], "maxout": [19, 20, 38, 39], "global": [19, 38, 43, 77, 78], "skip": [19, 20, 38, 39, 57, 78, 81], "fuse": [19, 30, 38], "loss": [19, 38, 51, 71], "cross": [19, 37, 38, 68], "entropi": [19, 37, 38], "dice": [19, 26, 37, 38, 51, 52], "__call__": [19, 20, 36, 37, 39], "forward": [19, 20, 37, 38, 39, 50, 75], "x": [19, 20, 26, 30, 37, 38, 39, 52, 79, 82], "graph": [19, 20, 38, 39], "logit": [19, 20, 38, 39], "build_model": [19, 38], "build": [19, 24, 38, 57, 61, 77, 79, 81], "classifierblock": [20, 39], "classif": [20, 38, 39], "classifi": [20, 38, 39, 45], "output": [20, 26, 28, 30, 35, 37, 38, 39, 42, 43, 50, 52, 53, 57, 61, 64, 66, 68, 69, 70, 75, 76, 77, 78, 79, 83], "competitivedensedecod": [20, 39], "competitivedecoderblock": [20, 39], "outblock": [20, 39], "decod": [20, 38, 39], "out_block": [20, 39], "indic": [20, 21, 39, 43, 68], "featur": [20, 39, 75, 81], "lower": [20, 39], "combin": [20, 24, 30, 37, 39, 61], "competitivedenseblock": [20, 39], "max": [20, 29, 34, 35, 39, 50], "encod": [20, 38, 39, 55], "maxpool": [20, 39], "op": [20, 26, 39, 52], "discriminator_block": 20, "consist": [20, 78, 79, 81], "bn": [20, 39], "relu": [20, 39], "num_channel": [20, 39], "num_filt": [20, 39], "kernel_h": [20, 39], "kernel_w": [20, 39], "stride_conv": [20, 39], "pool": [20, 30, 39, 42, 46, 55], "stride_pool": [20, 39], "num_class": [20, 26, 30, 39, 52], "44": [20, 39], "kernel_c": [20, 39], "": [20, 26, 43, 52, 55, 56, 57, 74, 75, 77, 81], "conv": [20, 39], "prev": [20, 39], "prelu": [20, 39], "end": [20, 29, 39, 43, 69, 77, 85], "norm": [20, 39, 43, 58, 78], "allow": [20, 29, 39, 43, 54, 76, 77, 79, 81], "across": [20, 39], "competitivedenseblockinput": [20, 39], "compris": [20, 39], "competitiveencoderblock": [20, 39], "ccomput": 20, "retain": [20, 39], "previou": [20, 35, 39, 75], "out_encod": [20, 39], "origin": [20, 34, 35, 39, 42, 50, 58, 65, 75, 76, 80], "indici": [20, 39], "competitiveencoderblockinput": [20, 39], "receiv": [20, 39, 46], "infer": [21, 31, 42, 71], "command": [21, 23, 29, 40, 41, 43, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 81], "line": [21, 23, 29, 40, 41, 43, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 75, 77, 79, 85], "argument": [21, 23, 30, 34, 42, 43, 44, 46, 47, 54, 57, 70, 77, 80, 83], "inspir": 21, "describ": [21, 57, 75, 76, 79], "sub": [21, 43, 45, 78, 80, 81, 85], "argpars": [21, 23, 42, 43, 44, 47, 54, 57, 62, 64, 65, 67, 68, 70], "namespac": [21, 23, 42, 43, 47, 58, 62, 64, 65, 66, 67, 68, 69, 70], "pars": [21, 43, 57], "argumentpars": [21, 43, 54, 57], "upon": [21, 43], "success": [21, 43, 57, 77], "execut": [21, 43, 46, 54, 55, 76, 77], "messag": [21, 29, 30, 35, 46, 50, 55, 57], "failur": [21, 56], "reason": [21, 74, 75], "case": [21, 26, 29, 52, 55, 64, 75, 76, 77, 78, 79, 81], "except": [21, 42, 46, 77], "faber": [21, 81], "j": [21, 68, 81], "kuegler": [21, 50, 81], "d": [21, 75, 77, 81], "bahrami": [21, 81], "fast": [21, 43, 75, 79, 81], "reliabl": [21, 75, 81], "deep": [21, 30, 65, 74, 75, 76, 77, 78, 79, 80, 81, 85], "pipelin": [21, 42, 46, 79, 81, 83, 85], "detail": [21, 24, 29, 74, 75, 77, 79, 81], "264": [21, 81], "2022": [21, 50, 81], "119703": [21, 81], "doi": [21, 81], "org": [21, 24, 74, 81], "1016": [21, 81], "setup_opt": [21, 23, 70], "configur": [21, 23, 32, 35, 37, 42, 43, 45, 47, 49, 75], "parser": [21, 23, 29, 40, 41, 43, 54, 57, 58, 60, 61], "script": [21, 57, 75, 77, 78, 79, 80, 81, 85], "is_checkpoint_epoch": 22, "cur_epoch": [22, 24, 25, 51], "check": [22, 29, 30, 40, 44, 45, 46, 50, 75, 78, 79, 81, 85], "yac": [22, 32, 35, 37, 38, 42, 45, 47, 49, 53], "config": [22, 24, 32, 35, 37, 38, 42, 45, 47, 49, 53, 54], "cfgnode": [22, 32, 35, 37, 38, 42, 45, 47, 49, 53], "node": [22, 32, 35, 37, 38, 42, 45, 47, 49, 77], "current": [22, 24, 42, 45, 46, 50, 51, 61, 75, 76, 82], "epoch": [22, 24, 45, 51], "get_config": [23, 47], "initi": [23, 26, 35, 38, 43, 47, 52, 80, 81], "config_fil": 23, "cosineannealingwarmrestartsdecai": 24, "optim": [24, 45, 49, 50, 77, 81], "t_0": 24, "t_mult": 24, "eta_min": 24, "last_epoch": 24, "rate": [24, 49], "schedul": [24, 45, 49, 77], "cosin": 24, "anneal": 24, "warm": 24, "restart": 24, "decai": 24, "factor": [24, 29, 34, 35, 58], "get_lr": 24, "decay_base_lr": 24, "curr_it": 24, "n_epoch": 24, "n_iter": 24, "cosinelr": 24, "base_lr": 24, "max_epoch": 24, "follow": [24, 30, 46, 54, 74, 75, 76, 77, 78, 79, 81, 85], "trajectori": 24, "get_epoch_lr": 24, "retriev": [24, 46], "lr": [24, 25, 49, 51], "polici": [24, 74, 83], "stage": 24, "lr_func_cosin": 24, "set_lr": 24, "reducelronplateauwithrestart": 24, "tmult": 24, "lr_restart": 24, "kwarg": [24, 30, 46, 54, 55, 70], "extend": 24, "reducelronplateau": 24, "abil": 24, "in_cooldown": 24, "is_bett": 24, "step": [24, 25, 53, 75, 76, 77, 79, 85], "metric": [24, 45, 71], "perfrom": 24, "matric": [24, 78], "determin": [24, 26, 29, 30, 56, 57, 61, 69, 74, 75, 78], "adjust": [24, 29, 77, 79], "document": [24, 57, 75, 80, 81], "doc": [24, 79], "stabl": [24, 26, 75, 77, 79], "html": [24, 74, 77, 78, 79], "warmupcosinelr": 24, "max_it": 24, "warmup_factor": 24, "001": [24, 80], "warmup_it": 24, "1000": [24, 30], "warmup_method": 24, "linear": [24, 29, 30, 63], "warmup": 24, "phase": 24, "get_lr_schedul": [24, 49], "object": [24, 26, 29, 30, 35, 37, 38, 40, 41, 42, 46, 47, 50, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70], "global_step": [25, 51], "total_it": [25, 51], "total_epoch": [25, 51], "class_nam": [25, 51], "writer": [25, 51], "log_epoch": [25, 51], "log_it": [25, 51], "cur_it": [25, 51], "log_lr": 25, "prediction_visu": 25, "img_batch": 25, "label_batch": 25, "pred_batch": 25, "reset": [25, 26, 51, 52, 75], "update_stat": [25, 51], "pred": [25, 26, 51, 65], "loss_dict": 25, "write_summari": [25, 51], "write": [25, 30, 43, 51, 57, 61, 63, 64, 75, 77, 81], "summari": [25, 27, 51, 80], "testmet": 25, "classname_to_id": 25, "metrics_per_class": 25, "gt": [25, 26, 30], "dicescor": [26, 52], "class_id": 26, "one_hot": 26, "output_transform": [26, 52], "lambda": [26, 52], "accumul": [26, 52], "coeffici": [26, 52], "union": [26, 28, 29, 30, 35, 42, 43, 44, 45, 49, 52, 61, 64], "intersect": [26, 40, 52], "callabl": [26, 43, 46, 52], "signatur": [26, 52], "exampl": [26, 30, 43, 52, 68, 74, 78, 79, 83], "arithmet": [26, 52], "engin": [26, 52], "process_funct": [26, 52], "form": [26, 52], "expect": [26, 43, 52, 74, 75, 81, 82], "you": [26, 52, 75, 76, 77, 78, 79, 81, 82, 85], "multi": [26, 52, 78, 81], "want": [26, 52, 75, 76, 77, 79], "respect": [26, 27, 36, 43, 52, 74, 77], "distribut": [26, 35, 43, 52, 77, 79], "usag": [26, 35, 52, 83], "In": [26, 29, 52, 55, 74, 76, 77, 78, 79, 80, 81], "most": [26, 30, 52, 75, 77, 78, 79, 81], "cuda": [26, 39, 46, 52, 78, 79], "local_rank": [26, 52], "alreadi": [26, 29, 30, 34, 52, 75, 77, 78, 79, 81], "set_devic": [26, 52], "avail": [26, 52, 56, 74, 76, 77, 79, 80], "per_class": 26, "class_idx": 26, "intern": [26, 46, 50], "state": [26, 45, 85], "descript": [26, 75, 80, 82], "dice_scor": [26, 52], "calcul": [26, 37, 42, 43, 45, 52, 78, 81], "hd": 26, "result": [26, 27, 29, 30, 37, 43, 46, 55, 74, 79, 80, 81], "voxelspac": 26, "symmetr": [26, 68, 69], "hausdorff": 26, "distanc": [26, 64, 68], "two": [26, 28, 43, 76, 79, 80, 81], "surfac": [26, 61, 64, 66, 68, 69, 76, 77, 79, 83], "everywher": 26, "unit": 26, "along": [26, 34, 68, 80], "equal": [26, 43, 44, 61, 68, 78], "rank": 26, "ax": 26, "grid": 26, "uniti": 26, "impli": 26, "neighbourhood": 26, "pass": [26, 43, 46, 50, 57, 61, 64, 77, 78, 79, 81], "scipi": 26, "ndimag": 26, "morphologi": 26, "generate_binary_structur": 26, "influenc": 26, "mm": [26, 29, 68, 78], "hd50": 26, "50th": 26, "percentil": 26, "hd95": 26, "95th": 26, "assd": 26, "averag": 26, "asd": 26, "real": 26, "therefor": [26, 76, 81], "suppli": 26, "order": [26, 29, 30, 35, 54, 57, 61, 76, 77, 79], "compar": [26, 29, 76, 81], "slightli": 26, "more": [26, 44, 46, 59, 76, 77, 78, 81], "small": [26, 29, 30, 43, 75, 77], "outlier": 26, "commonli": 26, "biomed": 26, "challeng": 26, "volume_similar": 26, "load_classwise_weight": 27, "wise": [27, 37, 80, 81], "plot_predict": [27, 53], "images_batch": [27, 53], "labels_batch": [27, 53], "batch_output": [27, 53], "plt_titl": [27, 53], "plot": [27, 30, 34, 43, 53], "valid": [27, 35, 44, 46, 53, 57, 77, 79], "file_save_nam": [27, 53], "set_summary_path": 27, "experi": [27, 45, 53, 74], "expr_num": [27, 45], "update_results_dir": 27, "update_split_path": 27, "split": [27, 30], "visualize_batch": 27, "idx": 27, "deubg": 27, "batch_dict": 27, "addgaussiannois": 28, "nois": [28, 39], "standard": [28, 29, 45, 78, 83], "augmentationpadimag": 28, "pad_siz": 28, "16": [28, 79], "pad_typ": 28, "reflect": 28, "pad_size_imag": 28, "pad_size_mask": 28, "__call": 28, "augmentationrandomcrop": 28, "output_s": 28, "crop_typ": 28, "randomli": 28, "zeropad2d": 28, "po": [28, 43], "top_left": [28, 36], "put": 28, "zeropad2dtest": 28, "call": [28, 54, 70, 77, 79, 81], "_pad": 28, "check_affine_in_nifti": 29, "logger": [29, 30], "qform": 29, "exist": [29, 45, 46, 50, 61, 75, 76, 77, 78], "differ": [29, 46, 74, 76, 77, 78, 79, 81], "sform": 29, "do": [29, 34, 74, 76, 77, 78, 79, 85], "match": [29, 30, 34], "otherwis": [29, 74, 76, 81], "nib": [29, 30, 42, 43], "nifti1imag": 29, "nifti2imag": 29, "log": [29, 30, 37, 51, 70, 71, 75, 78, 80, 85], "print": [29, 46, 54, 57, 61, 78], "info": [29, 57, 63, 81], "stdout": [29, 30, 55, 57], "conform_vox_s": 29, "conform_to_1mm_threshold": [29, 42], "python": [29, 50, 57, 78], "version": [29, 71, 74, 75, 76, 77, 78, 80, 83], "mri_convert": 29, "c": [29, 37, 38, 39, 79], "turn": [29, 34, 78], "uchar": [29, 30, 78], "reslic": 29, "256x256x256": [29, 78], "format": [29, 30, 31, 57, 58, 59, 63, 64, 85], "enforc": [29, 83], "1mm": [29, 30, 42, 78, 81], "minimum": [29, 30, 43, 46, 79], "isotrop": [29, 30, 68, 77, 78, 81], "analyz": [29, 30, 42, 43, 77], "spatialimag": [29, 30, 42, 43], "nearest": [29, 30, 36], "quadrat": [29, 30], "cubic": [29, 30], "voxsizeopt": [29, 30], "high": [29, 30, 81], "re": [29, 30, 42, 43, 75, 76, 81], "automat": [29, 77, 78, 80], "min": [29, 30, 42, 44, 78, 81], "assum": [29, 43, 54, 59, 76, 79], "smallest": [29, 78], "three": [29, 30, 76, 77], "abov": [29, 30, 75, 76, 77, 78], "ignor": [29, 37, 57], "mghimag": [29, 30], "unlik": 29, "rescal": [29, 58], "wai": [29, 75, 76, 77, 79, 80, 81], "around": [29, 58, 64, 68, 81], "howev": [29, 76, 77, 81], "increas": [29, 85], "find_img_size_by_fov": 29, "vox_siz": [29, 30, 42, 44, 78, 81], "min_dim": 29, "256": [29, 38], "cube": [29, 66, 78], "cover": [29, 75], "img_siz": [29, 43], "alwai": [29, 43, 46, 57, 75, 79, 81], "minim": [29, 30, 78], "find_min_s": 29, "max_siz": 29, "maxim": [29, 30], "round": 29, "get_conformed_vox_img_s": 29, "extract": [29, 30, 42, 54, 57, 59, 60], "suitabl": 29, "never": [29, 75], "conformed_vox_s": 29, "conformed_img_s": 29, "getscal": 29, "dst_min": 29, "dst_max": 29, "f_low": 29, "f_high": 29, "999": 29, "robustli": 29, "rang": [29, 58], "equival": [29, 77, 78, 80], "how": [29, 77, 79, 82], "futur": [29, 30, 42, 46, 55, 76, 77, 78], "low": 29, "higher": [29, 68, 79], "thousandth": 29, "src_min": 29, "is_conform": 29, "ep": [29, 43], "1e": [29, 43], "06": [29, 43], "check_dtyp": 29, "verbos": [29, 61], "1x1x1": 29, "inaccuraci": 29, "occur": [29, 68], "through": [29, 38, 39, 75, 79], "invers": [29, 50], "thu": 29, "sometim": 29, "correctli": [29, 66], "recogn": 29, "epsilon": 29, "account": [29, 74, 75], "shift": 29, "condit": 29, "done": [29, 76, 78, 79, 85], "intend": [29, 83], "uint8": 29, "violat": 29, "displai": 29, "map_imag": 29, "out_affin": 29, "out_shap": 29, "ras2ra": [29, 60], "new": [29, 50, 69, 75, 76, 79], "src": [29, 60, 61, 64], "3d": [29, 30], "trg": [29, 60, 61, 64], "relev": [29, 75], "options_pars": [29, 40, 41, 58, 60, 61, 62, 64, 66, 67, 68, 69], "hold": [29, 40, 41, 47, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70], "255": [29, 58], "scalecrop": 29, "below": [29, 30, 77, 78, 79, 80], "bbox_3d": 30, "box": 30, "npt": [30, 31, 34, 35, 43, 53, 58, 59, 60, 61, 63, 64, 65, 67, 69], "rmin": 30, "rmax": 30, "cmin": 30, "cmax": 30, "zmin": 30, "zmax": 30, "clean_cortex_label": 30, "aparc": [30, 34, 60, 67, 69, 76, 77, 78, 80, 81], "clean": 30, "undetermin": 30, "optic": 30, "chiasma": 30, "bkg": 30, "hypointens": 30, "vessel": 30, "5th": 30, "ventricl": [30, 40], "csf": 30, "remain": 30, "cortic": [30, 68, 80, 81], "cortex_border_mask": 30, "ctx_thresh": 30, "33": 30, "erod": 30, "cortex": [30, 34, 61, 68, 69, 80], "inner": [30, 68], "outer": 30, "ground": [30, 34, 52], "truth": [30, 34, 52], "parcel": [30, 67, 68, 80, 81], "grei": 30, "create_weight_mask": 30, "mapped_aseg": 30, "max_weight": [30, 34], "max_hires_weight": 30, "mean_filt": 30, "cortex_mask": 30, "gradient": [30, 34], "cap": [30, 79], "hire": [30, 34], "flag": [30, 46, 54, 66, 79, 81, 83, 85], "deep_sulci_and_wm_strand_mask": 30, "iter": [30, 43, 46, 51, 54, 58, 76], "sulci": [30, 34], "strand": [30, 34], "close": [30, 57], "eros": 30, "dilat": [30, 41], "g": [30, 43, 46, 50, 57, 60, 61, 64, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85], "ones": [30, 68, 77, 78, 81], "time": [30, 43, 57, 75, 76, 77, 78, 79, 81, 85], "sulcu": 30, "fill_unknown_labels_per_hemi": 30, "unknown_label": 30, "cortex_stop": 30, "lh": [30, 61, 64, 80], "2000": 30, "rh": [30, 61, 80], "closest": [30, 64, 68], "hemi": [30, 61, 81, 83], "stop": [30, 61, 76, 77], "3000": 30, "img_vol": 30, "label_vol": 30, "weight_vol": 30, "50": [30, 58], "orig": [30, 42, 46, 78, 79, 80], "fuse_cortex_label": 30, "hemispher": [30, 34, 61, 77, 78, 80], "reduc": [30, 37, 50, 75, 76], "anatom": [30, 80, 81], "get_labels_from_lut": 30, "lut": [30, 34, 35, 43], "label_extract": 30, "ctx": 30, "lookup": [30, 43], "pd": [30, 34, 43], "datafram": [30, 34, 43, 50], "like": [30, 43, 54, 57, 58, 79, 85], "panda": [30, 50], "entri": [30, 43, 46, 50, 54, 57], "labelnam": [30, 43, 64], "r": [30, 43, 50, 59, 64, 67, 75, 79], "b": [30, 43, 50, 55, 75, 77, 79, 81], "cerebr": [30, 43], "exterior": [30, 43], "70": [30, 43], "130": [30, 43], "180": [30, 43], "suffix": [30, 46], "get_largest_cc": 30, "get_thick_slic": 30, "feed": [30, 39], "preced": 30, "succeed": [30, 34], "read": [30, 43, 55, 57, 58, 61, 62, 68, 69, 75, 78, 81], "top": 30, "interest": [30, 43, 74], "th": 30, "append": [30, 61, 62, 77], "infer_mapping_from_lut": 30, "num_classes_ful": 30, "guess": 30, "load_and_conform_imag": 30, "img_filenam": [30, 35], "warn": [30, 61], "conform_min": 30, "conform": [30, 42, 71, 76, 77, 78, 80], "local": [30, 43, 75, 77, 78], "header_info": 30, "affine_info": 30, "orig_data": [30, 31, 35, 42], "multipl": [30, 43, 61, 62, 79, 81, 83], "frame": 30, "support": [30, 43, 49, 54, 78, 81, 83], "load_imag": 30, "effect": [30, 43, 50, 81], "error": [30, 46, 55, 57, 66, 75, 76, 81], "keyword": [30, 43, 46, 70], "ioerror": 30, "fail": [30, 70, 78, 79, 85], "releas": [30, 77], "gil": 30, "parallel": [30, 35, 43, 46, 75, 76, 78, 79, 81, 83], "concurr": [30, 42, 55], "import": [30, 76, 78, 80], "threadpoolexecutor": [30, 55], "future1": 30, "submit": [30, 46], "filename1": 30, "future2": 30, "filename2": 30, "image2": 30, "data2": 30, "load_maybe_conform": 30, "alt_fil": 30, "altern": [30, 43, 77, 81], "map_aparc_aseg2label": 30, "labels_sag": [30, 34], "sagittal_lut_dict": 30, "aseg_nocc": 30, "dktatla": [30, 76, 77, 78, 80, 81], "mgz": [30, 60, 66, 76, 77, 78, 79, 80, 81], "unify_lateralized_label": 30, "without": [30, 34, 44, 61, 74, 76, 77, 80], "corpu": [30, 34, 65, 77, 80], "callosum": [30, 34, 65, 77, 80], "hard": [30, 75], "code": [30, 43, 55, 70, 83, 85], "sagit": 30, "map_label2aparc_aseg": 30, "sequenti": [30, 77], "51": 30, "96": 30, "21": 30, "read_classes_from_lut": [30, 43], "lut_fil": [30, 43], "style": [30, 43, 57], "present": [30, 34, 43, 80], "color": [30, 34, 43, 50, 53, 61, 62, 68], "sagittal_coronal_remap_lookup": 30, "save_imag": 30, "img_arrai": 30, "save_a": [30, 42], "desir": [30, 35, 46], "supported_output_file_format": 30, "_header": 30, "under": [30, 77, 79], "dtypelik": [30, 43], "explicitli": 30, "split_cortex_label": 30, "splot": 30, "complet": [30, 70, 75], "de": [30, 74], "later": [30, 34, 79], "combi": 30, "prefix": [30, 54, 79], "multiscaledataset": 31, "gn_nois": 31, "unify_img": 31, "unifi": 31, "multiscaledatasetv": 31, "multiscaleorigdatathickslic": 31, "orig_zoom": [31, 35], "util": [32, 57, 71], "h5pydataset": 34, "h5py": [34, 79], "data_load": [34, 53, 71], "data_path": 34, "pre": [34, 79, 83], "orig_nam": [34, 42, 46], "aparc_nam": 34, "aparc_nocc": 34, "available_s": 34, "overal": 34, "edge_weight": 34, "hires_weight": 34, "gm_mask": 34, "subject_dir": [34, 46], "ob": 34, "search_pattern": 34, "data_set_s": 34, "blt": 34, "zoom": [34, 35, 42], "facor": 34, "ckpt": [35, 42, 45], "permute_ord": 35, "permut": 35, "default_devic": 35, "model_parallel": 35, "nn": [35, 45, 78], "modul": [35, 45, 70, 76, 79, 83], "neural": [35, 76, 79], "model_nam": 35, "alpha": [35, 59], "post_prediction_mapping_hook": 35, "init_pr": 35, "val_load": 35, "out_scal": 35, "inplac": 35, "pred_prob": 35, "probabl": 35, "get_cfg": 35, "get_devic": 35, "get_max_s": 35, "get_model_height": 35, "get_model_width": 35, "get_modelnam": 35, "get_num_class": [35, 42], "get_plan": 35, "load_checkpoint": 35, "checkpoint": [35, 42, 54, 57, 71, 79], "o": [35, 45, 61, 75, 76, 79, 81], "pathlik": [35, 45], "out_r": 35, "batch_siz": [35, 42], "filenam": [35, 42, 43, 45, 46, 54, 58, 61, 63, 64, 66, 68, 80], "toch": 35, "set_cfg": 35, "setup_model": 35, "cast": 35, "buffer": 35, "zoom2d": 36, "interpolation_mod": [36, 38], "crop_posit": [36, 38], "four": 36, "zoom3d": 36, "front_top_left": 36, "five": 36, "combinedloss": 37, "weight_dic": 37, "weight_c": 37, "crossentropi": 37, "ha": [37, 46, 58, 61, 75, 78, 79], "long": 37, "cross_entropy_loss": 37, "dice_loss": 37, "inputx": 37, "integ": [37, 44, 50, 69], "conta": 37, "crossentropy2d": 37, "reduct": 37, "likelihood": 37, "nll_loss": 37, "feedforward": [37, 38, 39], "diceloss": 37, "size_averag": 37, "ignore_index": 37, "calul": 37, "variabl": [37, 76, 77, 79, 81], "longtensor": 37, "start": [37, 43, 76, 77, 79, 83], "floattensor": 37, "get_loss_func": 37, "give": [37, 42, 46, 49, 76, 78], "search": [37, 45, 46, 57, 68, 75], "ce": 37, "notimplementederror": 37, "request": [37, 38, 46, 75], "padded_s": 38, "fastsurf": [38, 45, 54, 57, 76, 80, 81, 82, 83, 85], "cnn": [38, 77], "scale_factor": 38, "scale_factor_out": 38, "fastsurfercnnbas": 38, "encode1": 38, "encode2": 38, "encode3": 38, "encode4": 38, "decode1": 38, "decode2": 38, "decode3": 38, "decode4": 38, "bottleneck": 38, "decoder_output1": 38, "fastsurfervinn": [38, 77, 79, 81], "out_tensor_shap": 38, "downsampl": 38, "flex": 38, "inp_block": 38, "outp_block": 38, "interpol1": 38, "interpol2": 38, "trough": 39, "gaussiannois": 39, "sigma": 39, "inputdenseblock": 39, "bn0": 39, "gn": 39, "4": [39, 58, 59, 68, 74, 76, 81, 83], "learnabl": 39, "outputdenseblock": 39, "upinterpol": 39, "semi": [39, 79], "conv0": 39, "conv1": 39, "conv2": 39, "conv3": 39, "gn0": 39, "gn1": 39, "gn2": 39, "gn3": 39, "gn4": 39, "check_volum": 40, "asegdkt_segfil": [40, 46, 77, 78, 81], "voxvol": 40, "thre": [40, 58], "bigger": [40, 44, 78], "than": [40, 44, 59, 77, 78, 79], "get_ventricle_bg_intersection_volum": 40, "seg_arrai": 40, "intersection_volum": 40, "create_mask": 41, "aseg_data": 41, "dnum": 41, "enum": 41, "flip_wm_island": 41, "flip_data": 41, "data_inseg": 41, "reduced_aseg": 41, "runmodelondata": 42, "pred_nam": 42, "conf_nam": [42, 46], "current_plan": 42, "view_op": 42, "until": [42, 75], "__init__": 42, "construct": [42, 74], "set_and_create_outdir": 42, "conform_and_save_orig": 42, "set_subject": 42, "setter": 42, "getter": 42, "set_model": 42, "run_model": 42, "get_img": 42, "save_img": 42, "set_up_model_param": 42, "async_save_img": 42, "asynchron": [42, 46], "track": [42, 75], "finish": [42, 55, 77, 85], "synchron": [42, 43], "catch": 42, "handl": [42, 43, 46], "subjectdirectori": [42, 46], "get_predict": 42, "image_nam": 42, "pipeline_conform_and_save_orig": 42, "subjectlist": [42, 46], "yield": [42, 46], "mayb": [42, 75], "executor": [42, 46, 55], "args2cfg": 42, "set_up_cfg": 42, "insid": [42, 58, 68, 69, 77, 78, 81], "yaml": [42, 45, 47], "out_dir": [42, 61], "helpformatt": 43, "prog": 43, "indent_incr": 43, "max_help_posit": 43, "24": 43, "help": [43, 46, 54, 75, 76, 77, 78, 79, 85], "formatt": 43, "forc": [43, 55, 75, 78], "break": 43, "text": [43, 46, 54, 55, 57, 78, 80], "br": 43, "add_argu": [43, 54], "add_text": 43, "add_usag": 43, "end_sect": 43, "_arrai": 43, "max_label": [43, 50], "six_connect": 43, "_arraytyp": 43, "crop_patch_to_mask": 43, "sub_patch": 43, "patch": 43, "shrunk": 43, "subpatch": 43, "constrain": 43, "_numbertyp": 43, "To": [43, 75, 76, 77, 78, 79], "subregion": 43, "global_stat": 43, "lab": 43, "seg": [43, 60, 68, 77, 78, 80, 81, 85], "robust_percentag": 43, "sum": 43, "squar": [43, 59], "6": [43, 75, 81, 83], "_inttyp": 43, "pt": 43, "grow_patch": 43, "whalf": 43, "grow": 43, "ungrow": 43, "loadfile_ful": 43, "exit": [43, 85], "make_argu": 43, "patch_filt": 43, "global_crop": 43, "32": [43, 77], "patch_neighbor": 43, "pat_bord": 43, "loc_bord": 43, "patch_grow7": 43, "patch_in_gc": 43, "patch_shrink6": 43, "ungrow1_patch": 43, "ungrow7_patch": 43, "ndarray_alloc": 43, "legacy_freesurf": 43, "neighbor": 43, "etc": [43, 46, 81, 82], "uniqu": 43, "grown": 43, "detect": [43, 46], "within": [43, 74, 76, 81], "shrunken": 43, "ungrown": 43, "alloc": 43, "numer": 43, "stabil": 43, "legaci": 43, "pat_is_bord": 43, "pat_is_nbr": 43, "pat_label_count": 43, "count": [43, 56, 69, 77], "pat_label_sum": 43, "pv_calc": 43, "vox_vol": 43, "merged_label": 43, "return_map": 43, "fraction": 43, "virtuallabel": 43, "compat": [43, 81], "exactli": 43, "replic": 43, "pvstat": 43, "segid": 43, "nvoxel": 43, "volume_mm3": 43, "structnam": 43, "normmean": 43, "normstddev": 43, "normmin": 43, "normmax": 43, "normrang": 43, "unfil": 43, "meta": 43, "pv": 43, "nbr": 43, "were": [43, 80, 85], "nbrmean": 43, "segmean": 43, "primari": [43, 80], "locat": [43, 57, 76, 77, 78], "ipv": 43, "pv_calc_patch": 43, "full_pv": 43, "full_ipv": 43, "full_nbr_label": 43, "full_seg_mean": 43, "full_nbr_mean": 43, "modifi": [43, 65], "datautil": 43, "colorlut": 43, "seg_bord": 43, "cmp_dtype": 43, "int8": 43, "laplac": 43, "mark": [43, 75], "uniform_filt": 43, "filter_s": 43, "fillval": 43, "uniform": 43, "kernel": [43, 79], "unsqueez": 43, "insert": 43, "see": [43, 57, 74, 75, 77, 78, 79, 80, 81, 85], "expand_dim": 43, "expand": [43, 50], "syntax": [43, 81], "write_statsfil": 43, "segstatsfil": 43, "exclud": [43, 57, 77], "segfil": [43, 46], "normfil": 43, "extra_head": 43, "veri": [43, 76, 79, 81], "mri_segstat": 43, "analysi": [43, 76, 77, 81], "empti": [43, 50, 57, 68, 77], "newlin": 43, "charact": 43, "float_gt_zero_and_le_on": 44, "infin": 44, "argumenttypeerror": 44, "int_ge_zero": 44, "greater": [44, 79], "int_gt_zero": 44, "target_dtyp": 44, "datatyp": 44, "descriptor": 44, "unquote_str": 44, "unquot": 44, "quot": 44, "level": [44, 58, 74], "trail": 44, "vox": 44, "bin": [44, 79], "arguemnt": 44, "checkpointconfigdict": 45, "check_and_download_ckpt": 45, "checkpoint_path": 45, "url": 45, "download": [45, 79], "host": [45, 79], "site": 45, "create_checkpoint_dir": 45, "expr_dir": 45, "dir": [45, 57, 61], "expr": 45, "checkpoint_dir": 45, "download_checkpoint": [45, 71, 79], "checkpoint_nam": 45, "httperror": 45, "found": [45, 68, 76, 77, 81, 85], "server": 45, "reachabl": 45, "get_checkpoint": 45, "ckpt_dir": 45, "get_checkpoint_path": 45, "log_dir": 45, "resume_experi": 45, "prior_model_path": 45, "mutablesequ": 45, "load_checkpoint_config": 45, "posixpath": 45, "home": [45, 76, 77, 79, 81], "runner": 45, "work": [45, 46, 57, 77, 79, 81], "dev": [45, 75, 77, 78, 79], "rel": [45, 46, 54], "root": [45, 46, 54, 57, 77], "content": [45, 55, 57], "load_checkpoint_config_default": 45, "configtyp": [45, 54], "load_from_checkpoint": 45, "fine_tun": 45, "drop_classifi": 45, "fine": [45, 78, 80], "tune": [45, 80, 81], "loaded_epoch": 45, "remove_ckpt": 45, "save_checkpoint": 45, "best_metr": 45, "num_gpu": 45, "best": [45, 74], "resum": [45, 76], "gpu": [45, 77, 78, 81], "far": [45, 76, 78], "serialexecutor": 46, "serial": 46, "fn": [46, 52], "timeout": [46, 55], "chunksiz": 46, "_t": 46, "item": 46, "One": 46, "wait": [46, 55, 70], "chunk": 46, "_serialexecutor__fn": 46, "__fn": 46, "potenti": [46, 75, 76], "can_resolve_attribut": 46, "attr_nam": 46, "resolv": [46, 75, 82], "can_resolve_filenam": 46, "fileexists_by_attribut": 46, "fileexists_in_subject_fold": 46, "filepath": [46, 47, 64, 69], "folder": [46, 76, 77, 80, 81, 85], "filename_by_attribut": 46, "filename_in_subject_fold": 46, "get_attribut": 46, "attributeerror": 46, "has_attribut": 46, "try": [46, 75, 79], "interpret": [46, 75], "conformed_t1_fil": 46, "copy_orig_nam": 46, "copy_orig_t1_fil": 46, "copi": [46, 65, 76, 85], "main_segfil": [46, 78], "native_t1_fil": 46, "assign": [46, 77], "are_all_subject_fil": 46, "actual": [46, 75], "get_common_suffix": 46, "make_subjects_dir": 46, "assert_no_root": 46, "user": [46, 54, 55, 75, 76, 77, 79, 81, 85], "find_devic": 46, "flag_nam": 46, "min_memori": 46, "convent": 46, "cpu": [46, 56, 77, 78, 81], "byte": 46, "handle_cuda_memory_except": 46, "builtin": 46, "baseexcept": 46, "caus": 46, "func": 46, "over": [46, 52, 57, 77], "pair": [46, 59], "dummi": 46, "api": 46, "draw": 46, "_ti": 46, "pipeline_s": 46, "analog": 46, "next": [46, 75, 78, 79], "while": [46, 75], "cfg_file": 47, "setup_log": 48, "log_file_path": 48, "logfil": [48, 80], "optimz": 49, "schedular": 49, "steplr": 49, "cosineannealingwarmrestart": 49, "author": 50, "david": 50, "date": [50, 77], "aug": 50, "19": [50, 79], "colorlookupt": 50, "color_palett": 50, "colormap": 50, "gist_ncar": 50, "palett": 50, "get_color_by_index": 50, "getitem_by_index": 50, "labelname2id": 50, "kt": 50, "Not": 50, "labelname2index": 50, "consecut": 50, "jsoncolorlookupt": 50, "file_or_buff": 50, "undefin": 50, "map_logit": 50, "map_prob": 50, "chain": 50, "other_mapp": 50, "vt": 50, "t_othervalu": 50, "is_biject": 50, "biject": 50, "classmethod": 50, "make_classmapp": 50, "keep_label": 50, "compress_out_spac": 50, "anoth": [50, 61, 75], "chang": [50, 75, 77, 78, 79], "reassign": 50, "mame": 50, "65535": 50, "AT": 50, "reversed_dict": 50, "overwrit": [50, 61, 77], "merg": [50, 75, 78, 81], "source_spac": 50, "accept": [50, 74, 77], "target_spac": 50, "nativ": [50, 78, 81, 83], "possibl": [50, 75, 79, 82, 83], "tsvlookupt": 50, "add_background": 50, "raw": [50, 79], "No": [50, 61, 81], "rgba": [50, 68], "link": [50, 77, 80, 81], "is_int": 50, "a_object": 50, "array_or_tensor": 50, "to_same_typ": 50, "type_hint": 50, "hint": 50, "disable_confusion_mat": 51, "enable_confusion_mat": 51, "bach": 51, "score": [51, 52], "batch_loss": 51, "loss_tot": 51, "loss_c": 51, "loss_dic": 51, "comput_dice_cnf": 52, "cnf": 52, "compute_dsc": 52, "dsc": 52, "cnf_mat": 52, "confus": [52, 53], "cm": [52, 53], "iou_scor": 52, "pred_cl": 52, "true_cl": 52, "nclass": 52, "79": 52, "categor": 52, "oppos": 52, "hot": 52, "precision_recal": 52, "recal": 52, "tp": [52, 53], "precis": 52, "fp": 52, "check_path": 53, "find_latest_experi": 53, "latest": [53, 75, 77, 79, 81], "plot_confusion_matrix": 53, "titl": [53, 75, 82], "cmap": 53, "matplotlib": 53, "linearsegmentedcolormap": 53, "temp": 53, "pdf": 53, "plt": 53, "colormapregistri": 53, "colour": [53, 61], "blue": 53, "fig": 53, "figur": 53, "update_num_step": 53, "all_flag": 54, "allow_root": 54, "dest": 54, "parse_arg": 54, "allows_root": 54, "action": [54, 74], "store_tru": 54, "canaddargu": 54, "t_addarg": 54, "add_plane_flag": 54, "defaults_path": 54, "fastsurfer_hom": 54, "liter": 54, "ckpt_": 54, "cfg_": 54, "messagebuff": 55, "err": 55, "retcod": 55, "err_str": 55, "out_str": 55, "popen": [55, 57, 70], "bufsiz": 55, "stdin": 55, "stderr": 55, "preexec_fn": 55, "close_fd": 55, "shell": 55, "cwd": 55, "env": [55, 79], "universal_newlin": 55, "startupinfo": 55, "creationflag": 55, "restore_sign": 55, "start_new_sess": 55, "pass_fd": 55, "extra_group": 55, "umask": 55, "pipes": 55, "extens": [55, 62], "subprocess": 55, "conveni": [55, 81], "async_finish": 55, "next_messag": 55, "as_futur": 55, "applic": [55, 77, 79], "behavior": [55, 74, 75], "dry_run": 55, "termin": [55, 78, 79, 85], "unlimit": 55, "pipe": 55, "togeth": 55, "befor": [55, 76], "pypopen": 55, "_arg": 55, "get_num_thread": 56, "tri": 56, "usabl": 56, "versiondict": 57, "version_lin": 57, "git_hash": 57, "git_branch": 57, "git_statu": 57, "pypackag": 57, "depend": [57, 75, 77, 79, 81, 82, 85], "filter_git_statu": 57, "git_process": 57, "git": [57, 75, 77], "statu": [57, 74], "run_tool": [57, 71], "__pycache__": 57, "get_default_version_info": 57, "has_git": 57, "instal": [57, 77, 78, 83], "section": [57, 75], "project_fil": 57, "build_cach": 57, "prefer_cach": 57, "hash": 57, "branch": [57, 75, 77, 79], "md5sum": 57, "packag": [57, 75], "pip": [57, 79], "conda": [57, 81], "project_root": 57, "project": [57, 74, 75, 78, 81], "parent": 57, "concaten": 57, "textio": 57, "toml": 57, "pyproject": 57, "cach": 57, "prefer": [57, 75, 79, 80, 81], "onlin": [57, 74], "make_pars": 57, "parse_build_fil": 57, "build_fil": 57, "print_build_fil": 57, "leav": 57, "read_and_close_vers": 57, "pointer": 57, "read_version_from_project_fil": 57, "therein": 57, "get_brain_centroid": 58, "itk_mask": 58, "centroid": [58, 60, 67], "sitk": [58, 60], "get_image_mean": 58, "get_tal_origin_voxel": 58, "tal": 58, "arraylik": [58, 61, 63, 65, 67, 69], "vox_origin": 58, "itk_n4_bfcorrect": 58, "itk_imag": 58, "shrink": 58, "numit": 58, "converg": 58, "itk_bfcorr_imag": 58, "normalize_img": 58, "source_intens": 58, "target_intens": 58, "guarante": 58, "normalize_wm_aseg": 58, "itk_aseg": 58, "target_wm": 58, "110": 58, "target_bg": 58, "backgroud": 58, "itk": 58, "normalize_wm_mask_bal": 58, "ball": [58, 68], "normalized_imag": 58, "read_talairach_xfm": 58, "fname": 58, "angles2rmat": 59, "beta": 59, "gamma": 59, "angl": 59, "degre": 59, "find_affin": 59, "p_mov": 59, "p_dst": 59, "least": [59, 79, 81], "solut": [59, 81], "overdetermin": 59, "system": [59, 77, 83], "point": [59, 75, 76, 77, 81], "destin": [59, 63, 67, 69], "ident": [59, 69, 74, 75], "find_rigid": 59, "homogen": 59, "find_rot": 59, "rmat2angl": 59, "mris_regist": 59, "align_flip": 60, "mid_slic": 60, "registr": [60, 77, 78], "make": [60, 66, 74, 75, 77, 79, 81], "upright": 60, "regist": [60, 77, 78], "cortial": 60, "labl": 60, "dkt": [60, 65, 77, 80, 81], "mid": 60, "tsqrt": 60, "align_seg_centroid": 60, "seg_mov": 60, "seg_dst": 60, "label_id": [60, 67], "align": [60, 67, 74], "rigid": 60, "get_seg_centroid": 60, "mov": 60, "dst": 60, "coord": [60, 64], "centroids_mov": 60, "centroids_dst": 60, "get_vox2ra": 60, "vox2ra": 60, "build_annot": 61, "all_label": 61, "all_valu": 61, "col_id": 61, "trg_white": 61, "cortex_label_nam": 61, "annot": [61, 68, 69, 80], "here": [61, 74, 77, 78, 79, 81, 85], "larger": [61, 77], "written": [61, 64, 77], "col": 61, "annot_id": 61, "annot_v": 61, "colortab": 61, "labeldir": 61, "outannot": 61, "thresh": 61, "exvivo": 61, "f": [61, 64, 68, 75, 78, 79], "srcsphere": 61, "reg": [61, 64, 78], "trgsphere": 61, "map_multiple_label": 61, "src_dir": 61, "src_label": 61, "src_sphere_nam": 61, "trg_sphere_nam": 61, "trg_white_nam": 61, "trg_sid": [61, 64], "stop_miss": 61, "fsavaerag": 61, "via": [61, 68, 69, 74, 75, 79, 81, 83], "director": 61, "read_colort": [61, 62], "colortab_nam": 61, "colort": [61, 62], "read_multiple_label": 61, "input_dir": 61, "label_nam": 61, "write_annot": 61, "out_annot": 61, "care": [61, 77], "taken": [61, 64], "interfac": [62, 64, 65, 66, 67, 68, 69, 70, 75, 81], "colnam": 62, "colappend": 62, "drop_unknown": 62, "all_id": 62, "all_nam": 62, "all_col": 62, "writelta": 63, "src_fname": 63, "src_header": 63, "dst_fname": 63, "dst_header": 63, "getsurfcorrespond": 64, "src_sphere": 64, "trg_sphere": 64, "tree": 64, "vertex": [64, 66, 68, 69, 80], "nx3": 64, "100": 64, "thei": [64, 74, 75, 76, 77], "disk": 64, "kdtree": 64, "stai": [64, 81], "fix": [64, 66, 75, 79], "vertic": [64, 67, 68, 69], "mapsurflabel": 64, "src_label_nam": 64, "out_label_nam": 64, "trg_surf": 64, "rev_map": 64, "vetric": 64, "trg_label": 64, "trg_valu": 64, "writesurflabel": 64, "sid": [64, 76, 77, 78, 79], "surf": [64, 68, 69, 75, 76, 77, 78, 79, 80, 81, 85], "argument_pars": 65, "paint_in_cc": 65, "aseg_cc": 65, "paint": 65, "asegdkt": [65, 76, 80, 81], "cc": [65, 76], "resafe_surfac": 66, "insurf": 66, "outsurf": 66, "pretess": 66, "rewrit": [66, 75], "therebi": 66, "loc": 66, "properli": 66, "march": [66, 78], "sure": [66, 75, 77, 79, 81], "scannerra": 66, "surfacera": 66, "pretess127": 66, "align_aparc_centroid": 67, "v_mov": 67, "labels_mov": 67, "v_dst": 67, "labels_dst": 67, "attent": [67, 74], "parecl": 67, "construct_adj_clust": 68, "tria": [68, 69], "adjac": [68, 69], "triangl": [68, 69], "csc_matrix": 68, "manifold": 68, "spars": [68, 69], "binar": 68, "adj": 68, "find_all_island": 68, "island": 68, "read_geometri": 68, "m": [68, 69, 77, 78, 79, 81], "tupel": 68, "read_annot": 68, "vidx": 68, "arrrai": 68, "disconnetct": 68, "replace_label": 68, "img_label": 68, "img_lut": 68, "surf_lut": 68, "imgag": 68, "surf_label": 68, "surf_ctab": 68, "surf_nam": 68, "sample_img": 68, "projmm": 68, "sample_nearest_nonzero": 68, "vox_coord": 68, "imglut": 68, "surflut": 68, "outaparc": 68, "gm": [68, 81], "smooth": [68, 69], "bincount2d_vector": 69, "occurr": 69, "get_adjm": 69, "mesh": 69, "adjaceni": 69, "adjm": 69, "csr": 69, "insurfnam": 69, "inaparcnam": 69, "incortexnam": 69, "outaparcnam": 69, "sufac": 69, "mode_filt": 69, "fillonlylabel": 69, "novot": 69, "csr_matrix": 69, "what": [69, 74, 75, 77, 79, 81, 85], "vote": 69, "exclus": 69, "labels_new": 69, "unsid": 69, "repeat": 69, "wider": 69, "produc": [69, 76, 77, 79, 81], "outsid": 69, "smoothed_label": 69, "send": 70, "returncod": 70, "spherical_wrapp": 70, "command1": 70, "command2": 70, "fallback": [70, 79], "constructor": 70, "code_1": 70, "generate_hdf5": 71, "quick_qc": 71, "reduce_to_aseg": [71, 76], "run_predict": [71, 78], "segstat": 71, "interpolation_lay": 71, "sub_modul": 71, "arg_typ": 71, "common": [71, 74], "load_config": 71, "lr_schedul": 71, "mapper": 71, "meter": 71, "misc": 71, "parser_default": 71, "data_util": 71, "recon_surf": [71, 78, 79], "align_point": 71, "align_seg": 71, "create_annot": 71, "fs_balabel": 71, "lta": 71, "map_surf_label": 71, "n4_bias_correct": 71, "paint_cc_into_pr": 71, "rewrite_mc_surfac": 71, "rotate_spher": 71, "sample_parc": 71, "smooth_aparc": 71, "spherically_project_wrapp": 71, "cerebnet": [71, 78, 79, 81, 83], "apply_warp": 71, "cerebnet_dataload": 71, "cerebnet_dataset": 71, "load_data": 71, "wm_merge_clean": 71, "cerebnet_model": 71, "cerebnet_util": 71, "foster": 74, "open": [74, 75, 79], "welcom": 74, "environ": [74, 75, 77, 81], "maintain": [74, 75], "particip": 74, "commun": [74, 75], "harass": 74, "free": [74, 77, 78, 81], "everyon": 74, "regardless": 74, "bodi": 74, "disabl": 74, "ethnic": 74, "sex": 74, "characterist": 74, "gender": 74, "express": 74, "educ": [74, 81], "socio": 74, "econom": 74, "nation": 74, "person": 74, "appear": 74, "race": 74, "religion": 74, "sexual": 74, "inclus": 74, "languag": 74, "Being": 74, "viewpoint": 74, "gracefulli": 74, "critic": [74, 75], "focus": 74, "show": [74, 75], "empathi": 74, "member": [74, 75], "unaccept": 74, "imageri": 74, "unwelcom": 74, "advanc": [74, 75, 81], "troll": 74, "insult": 74, "derogatori": 74, "comment": [74, 75], "polit": 74, "attack": 74, "public": [74, 81], "privat": 74, "publish": 74, "physic": 74, "electron": 74, "address": [74, 75], "explicit": 74, "permiss": 74, "could": [74, 77, 79], "inappropri": 74, "profession": 74, "clarifi": 74, "appropri": [74, 79], "fair": 74, "instanc": 74, "edit": [74, 79, 83], "reject": 74, "commit": [74, 75], "wiki": 74, "issu": [74, 75, 79, 82], "ban": 74, "temporarili": 74, "perman": 74, "deem": 74, "threaten": 74, "offens": 74, "harm": 74, "individu": [74, 75, 81], "offici": [74, 79], "mail": 74, "post": 74, "social": 74, "media": 74, "act": 74, "appoint": 74, "offlin": 74, "event": 74, "represent": 74, "further": [74, 80], "abus": 74, "report": [74, 80, 83], "contact": 74, "team": [74, 75], "mi": [74, 75, 77, 79], "leoni": 74, "henschel": [74, 81], "dzne": 74, "martin": 74, "reuter": [74, 81], "complaint": 74, "review": 74, "investig": 74, "necessari": [74, 75, 76, 77, 78, 79], "circumst": 74, "oblig": 74, "confidenti": 74, "regard": 74, "incid": 74, "separ": [74, 77], "who": 74, "good": [74, 81], "faith": 74, "face": 74, "temporari": 74, "repercuss": 74, "leadership": 74, "adapt": 74, "www": 74, "answer": 74, "question": 74, "about": [74, 75], "faq": 74, "encourag": 75, "your": [75, 76, 77, 78, 79, 81], "pleas": [75, 78, 79, 81, 82], "u": [75, 77, 79, 81, 85], "realli": [75, 78], "incompat": 75, "experienc": 75, "solv": [75, 79], "tracker": 75, "collect": 75, "trace": 75, "traceback": 75, "platform": [75, 77], "window": [75, 81, 83], "linux": [75, 81, 83], "maco": [75, 81, 83], "x86": 75, "arm": [75, 79], "compil": 75, "sdk": 75, "runtim": 75, "seem": 75, "possibli": 75, "reproduc": 75, "And": 75, "older": [75, 79], "sinc": [75, 79], "ask": [75, 79], "talk": 75, "yet": [75, 77, 79, 85], "explain": [75, 79, 81], "would": [75, 76, 77, 79], "much": [75, 76, 79, 81], "context": 75, "reproduct": 75, "someon": 75, "recreat": 75, "isol": 75, "problem": [75, 79], "subjid": 75, "recon": [75, 76, 78, 79, 80, 81, 85], "l": [75, 81], "cmdf": 75, "onc": [75, 76, 77, 79], "obviou": 75, "those": [75, 81], "repro": 75, "tag": [75, 79], "abl": [75, 79, 81], "well": [75, 77, 81], "guidelin": 75, "understand": [75, 76], "carefulli": 75, "been": [75, 79], "idea": 75, "fit": [75, 77], "scope": [75, 83], "aim": 75, "strong": 75, "convinc": 75, "develop": [75, 77], "merit": 75, "mind": 75, "major": 75, "our": [75, 76, 77, 79, 81, 83], "subset": [75, 77], "minor": 75, "plugin": 75, "librari": 75, "clear": [75, 81], "mani": [75, 77, 80], "why": 75, "fork": 75, "repositori": [75, 79], "clone": [75, 77, 79], "usernam": 75, "cd": [75, 77, 79, 85], "repo": [75, 79], "upstream": 75, "remot": 75, "fetch": 75, "checkout": 75, "my": 75, "am": 75, "some": [75, 76, 78, 79, 80], "push": 75, "pull": [75, 77, 79], "web": 75, "ni": 75, "lot": 75, "thing": [75, 79], "meantim": 75, "conflict": 75, "rebas": 75, "sole": 75, "switch": [75, 78, 80], "chekcout": 75, "onto": 75, "gihub": 75, "peopl": 75, "co": [75, 81], "histori": 75, "delet": 75, "gui": 75, "procedur": 75, "ensur": [75, 79], "diverg": 75, "go": [75, 76], "simpli": 75, "happen": 75, "awar": [75, 81], "guid": [75, 79], "gen": 75, "variou": [76, 79], "place": [76, 77], "few": [76, 79, 81], "plan": 76, "notic": 76, "net": 76, "auto_noccseg": [76, 77, 80], "final": [76, 79], "orig_nu": [76, 77, 80], "interact": 76, "typic": 76, "finalsurf": 76, "placement": 76, "control": [76, 77], "meaning": 76, "achiev": 76, "twice": [76, 79], "brighten": 76, "improv": 76, "qualiti": [76, 81], "difficult": 76, "export": [76, 77, 79, 81], "freesurfer_hom": [76, 77, 78, 79], "setupfreesurf": [76, 77], "sh": [76, 77, 78, 79, 81, 84], "datadir": [76, 77], "my_mri_data": [76, 77, 79, 81], "fastsurferdir": [76, 77], "my_fastsurfer_analysi": [76, 77, 79, 81], "run_fastsurf": [76, 77, 78, 79, 81], "subjectx": [76, 79, 81, 83], "nii": [76, 77, 78, 80], "gz": [76, 77, 78, 80], "sd": [76, 77, 78, 79, 85], "3t": [76, 77, 78, 81], "again": 76, "subfold": [76, 81], "freeview": [76, 80], "visual": [76, 79, 81], "output_directori": 76, "underseg": 76, "method_1": 76, "succesfulli": 76, "py": [76, 78, 79], "python3": [76, 78, 79], "outmask": 76, "fixwm": 76, "step_2": 76, "ouput": 76, "step_1": 76, "beforehand": 76, "surf_onli": [76, 77, 78, 81, 85], "forget": [76, 77], "fullpath": 76, "unless": [76, 80], "too": 76, "grab": 76, "dura": 76, "tighten": 76, "directli": [76, 77, 78], "past": 76, "even": [76, 77, 79], "though": 76, "hope": 76, "becom": 76, "availbl": 76, "thank": [76, 82], "dockerhub": [77, 79, 81], "websit": 77, "surfer": [77, 78, 81], "nmr": [77, 78, 81], "harvard": [77, 78, 81], "edu": [77, 78, 81], "acquir": 77, "licens": [77, 78, 79, 81], "mount": [77, 78, 81], "fs_licens": [77, 78, 79, 81], "basic": 77, "sever": [77, 81], "half": 77, "deepmi": [77, 79, 81], "v": [77, 79, 81], "my_fs_license_dir": [77, 79, 81], "rm": [77, 79, 81], "txt": [77, 78, 79], "access": [77, 79], "resourc": [77, 79], "With": 77, "visibl": 77, "colon": 77, "part": [77, 78, 81, 85], "belong": 77, "discourag": 77, "analys": 77, "atla": [77, 78, 80, 81], "better": [77, 78, 79], "icv": [77, 78], "etiv": [77, 78], "avoid": [77, 78], "readm": [77, 79, 81], "md": [77, 81], "instruct": [77, 79, 81], "sif": [77, 79, 81], "exec": [77, 81], "nv": [77, 81], "broken": [77, 79], "consol": 77, "significantli": 77, "speed": 77, "creation": [77, 78, 79], "omit": 77, "helper": 77, "brun_subject": 77, "delimit": 77, "subject_id1": 77, "path_to_t1": 77, "subject2": 77, "subject3": 77, "subject10": 77, "them": [77, 79, 81], "recommend": [77, 79, 80, 81], "brun_fastsurf": 77, "invok": 77, "entrypoint": 77, "subject_list": 77, "almost": 77, "parallel_subject": 77, "experiment": [77, 78, 81], "particularli": 77, "seri": 77, "won": 77, "minut": [77, 81], "subject1": 77, "outputdir": 77, "conformed_nam": [77, 78], "seg_onli": [77, 78, 79, 80, 81, 85], "no_cereb": [77, 78, 80, 81], "furthermor": 77, "simplifi": [77, 80], "biasfield": [77, 80], "no_biasfield": [77, 78, 81], "These": [77, 78, 79], "especi": [77, 81], "benefit": [77, 81], "core": [77, 78, 81], "come": 77, "orchestr": 77, "srun_fastsurf": [77, 84], "heavi": 77, "workload": 77, "partit": 77, "intermedi": [77, 78], "io": [77, 79], "gpu_partit": 77, "cpu_partit": 77, "singularity_imag": 77, "job": [77, 85], "reconstruct": [77, 83], "cleanup": [77, 85], "There": [77, 79, 81], "intricaci": 77, "advis": 77, "debug": [77, 84], "dry": 77, "inspect": 77, "hpcwork": 77, "y": [77, 79], "manual": [77, 78, 83], "On": [77, 79], "test_subject": 78, "test_subject_t1": 78, "addition": [78, 79], "no_asegdkt": [78, 81], "off": [78, 80], "tell": [78, 81], "against": 78, "overview": 78, "subjects_dir": 78, "setup": [78, 79], "head": [78, 79, 81], "compli": 78, "obtain": 78, "seg_log": 78, "program": 78, "enough": [78, 79], "decis": [78, 81], "overwrot": 78, "agg": 78, "device_num": 78, "mp": [78, 79], "nvidia": [78, 79, 81], "mac": [78, 79], "appl": 78, "silicon": [78, 79], "chip": [78, 79], "cereb_segfil": 78, "dl": 78, "deactiv": [78, 81], "5t": 78, "littl": 78, "impact": 78, "fstess": 78, "mri_tessel": 78, "fsqsphere": 78, "novel": 78, "spectral": 78, "qsphere": 78, "fsaparc": 78, "slower": [78, 79, 81], "no_fs_t1": 78, "nu": 78, "brainmask": [78, 80, 83], "30": 78, "no_surfreg": 78, "safe": 78, "architectur": [78, 79], "t1w": [78, 81], "98mm": 78, "isometr": 78, "highr": [78, 81], "ignore_fs_vers": 78, "human": 79, "ii": 79, "iii": 79, "vari": 79, "don": 79, "spec": 79, "8": [79, 81], "gb": [79, 81], "graphic": [79, 81], "m1": 79, "admin": 79, "easili": 79, "distro": 79, "yourself": 79, "walk": 79, "sudo": 79, "apt": 79, "wget": 79, "ca": 79, "certif": 79, "upgrad": 79, "newer": 79, "libstdc": 79, "glibcxx": 79, "29": 79, "ppa": 79, "toolchain": 79, "11": 79, "suffici": 79, "qo": 79, "miniconda": 79, "continuum": 79, "miniconda3": 79, "py38_4": 79, "x86_64": 79, "chmod": 79, "p": 79, "opt": 79, "decid": 79, "thoroughli": 79, "yml": 79, "fly": 79, "install_env": 79, "fastsurfer_": 79, "rocm": 79, "custom": 79, "fastsurfer_reconsurf": 79, "pythonpath": [79, 81], "pwd": [79, 81], "everi": 79, "bashrc": 79, "echo": [79, 81, 85], "readi": 79, "email": 79, "successfulli": [79, 85], "radeon": 79, "pro": 79, "w6600": 79, "bundl": 79, "v5": 79, "page": 79, "introduction_to_amd_rocm_installation_guide_for_linux": 79, "my_fastsurf": 79, "coupl": 79, "sys_ptrac": 79, "secur": [79, 83], "seccomp": 79, "unconfin": 79, "kfd": 79, "dri": 79, "video": 79, "ipc": 79, "shm": 79, "8g": 79, "qc": 79, "desktop": 79, "15": 79, "15gb": 79, "modern": 79, "m2": 79, "faster": 79, "built": 79, "recent": 79, "packet": 79, "brew": 79, "curl": 79, "fssl": 79, "githubusercont": 79, "homebrew": 79, "venv": 79, "had": 79, "longer": 79, "hdf5_dir": 79, "pip3": 79, "prepend": 79, "pytorch_enable_mps_fallback": 79, "fall": 79, "wsl2": 79, "everyth": [79, 81], "powershel": 79, "now": [79, 81], "8gb": 79, "ram": 79, "reserv": 79, "21h1": 79, "wsl": 79, "21h2": 79, "121": 79, "driver": 79, "toolkit": 79, "softwar": [79, 80, 81], "shown": 80, "subcort": 80, "downstream": [80, 83], "whenev": 80, "larg": [80, 81], "nomenclatur": 80, "geometri": 80, "overlai": 80, "tabular": 80, "symbol": 80, "concern": 80, "withcc": 80, "earlier": 80, "pial": 80, "inflat": 80, "assess": 80, "particular": 80, "incl": 80, "symlink": [80, 81], "wmparc": [80, 81], "area": 80, "curv": 80, "curvatur": 80, "accur": 81, "volumetr": 81, "1h": 81, "transit": 81, "millimet": 81, "throughout": 81, "emploi": 81, "whole": 81, "substructur": 81, "tradit": 81, "approxim": 81, "95": 81, "mimic": 81, "7mm": 81, "beyond": 81, "delin": 81, "resampl": 81, "60": 81, "90": 81, "mr": 81, "scanner": 81, "notwithstand": 81, "limit": [81, 85], "exce": 81, "5mm": 81, "siemen": 81, "mprage": 81, "ge": 81, "spgr": 81, "behaviour": 81, "singular": [81, 83], "docker": [81, 83], "intel": 81, "As": 81, "becaus": [81, 85], "hardwar": 81, "fastsurfer_gpu": 81, "illustr": 81, "entir": 81, "fastsurfer_exampl": 81, "quick": [81, 82, 83], "slurm": [81, 83, 84], "cluster": [81, 83], "fastsurfer_output_fil": 81, "At": 81, "8mm": 81, "9": 81, "independ": 81, "progress": 81, "subfield": 81, "hippocampu": 81, "amygdala": 81, "brainstrem": 81, "thalamu": 81, "hypothalamu": 81, "tracula": 81, "protocol": 81, "feel": 81, "research": 81, "purpos": 81, "popul": 81, "clinic": 81, "patient": 81, "Be": 81, "unreli": 81, "due": 81, "motion": 81, "artefact": 81, "contributor": [81, 83], "shall": 81, "liabl": 81, "damag": 81, "cite": 81, "conjeti": 81, "estrada": 81, "dier": 81, "fischl": 81, "219": 81, "2020": 81, "117012": 81, "251": 81, "118933": 81, "dx": 81, "twitter": 81, "deepmilab": 81, "fund": 81, "chan": 81, "zuckerberg": 81, "german": 81, "feder": 81, "ministri": 81, "fswiki": 81, "freesurfermethodscit": 81, "white_check_mark": 82, "respons": [82, 83], "expert": 83, "acknowledg": 83, "vulner": 83, "coven": 83, "conduct": 83, "pledg": 83, "bug": 83, "suggest": 83, "enhanc": 83, "did": 85, "succe": 85, "squeue": 85, "jobarrayid": 85, "1750814_3": 85, "kueglrun": 85, "null": 85, "1750815_3": 85, "kuegpend": 85, "aftercorr": 85, "1750814_": 85, "1750816": 85, "kpend": 85, "afterani": 85, "1750815_": 85, "1750815_1": 85, "kuegrun": 85, "1750815_2": 85, "latter": 85, "subject_success": 85, "kill": 85, "unsuccess": 85, "sai": 85, "grep": 85, "surf_": 85, "surf_xxx_yi": 85, "surf_xxx_yy_zz": 85, "budget": 85, "mem": 85, "bash": 85, "snippet": 85, "z": 85, "extern": 85, "fi": 85}, "objects": {"CerebNet": [[9, 0, 0, "-", "apply_warp"], [18, 0, 0, "-", "inference"], [21, 0, 0, "-", "run_prediction"]], "CerebNet.apply_warp": [[9, 1, 1, "", "main"], [9, 1, 1, "", "save_nii_image"]], "CerebNet.data_loader": [[10, 0, 0, "-", "augmentation"], [11, 0, 0, "-", "data_utils"], [12, 0, 0, "-", "dataset"], [13, 0, 0, "-", "loader"]], "CerebNet.data_loader.augmentation": [[10, 2, 1, "", "RandomAffine"], [10, 2, 1, "", "RandomBiasField"], [10, 2, 1, "", "RandomFlip"], [10, 2, 1, "", "RandomLabelsToImage"], [10, 2, 1, "", "ToTensor"], [10, 2, 1, "", "ToTensorTest"], [10, 1, 1, "", "sample_intensity_stats_from_image"]], "CerebNet.data_loader.data_utils": [[11, 1, 1, "", "create_weight_mask2d"], [11, 1, 1, "", "filter_blank_slices_thick"], [11, 1, 1, "", "get_aseg_cereb_mask"], [11, 1, 1, "", "map_prediction_sagittal2full"], [11, 1, 1, "", "map_sag2label"], [11, 1, 1, "", "slice_lia2ras"], [11, 1, 1, "", "slice_ras2lia"], [11, 1, 1, "", "transform_axial"], [11, 1, 1, "", "transform_axial2sagittal"], [11, 1, 1, "", "transform_coronal"], [11, 1, 1, "", "transform_sagittal"]], "CerebNet.data_loader.dataset": [[12, 2, 1, "", "CerebDataset"], [12, 2, 1, "", "SubjectDataset"], [12, 2, 1, "", "TestLoader"]], "CerebNet.data_loader.dataset.SubjectDataset": [[12, 3, 1, "", "locate_mask_bbox"], [12, 4, 1, "", "plane"], [12, 3, 1, "", "set_plane"]], "CerebNet.data_loader.loader": [[13, 1, 1, "", "get_dataloader"]], "CerebNet.datasets": [[14, 0, 0, "-", "generate_hdf5"], [15, 0, 0, "-", "load_data"], [16, 0, 0, "-", "utils"], [17, 0, 0, "-", "wm_merge_clean"]], "CerebNet.datasets.generate_hdf5": [[14, 2, 1, "", "CerebNetDataset"]], "CerebNet.datasets.generate_hdf5.CerebNetDataset": [[14, 3, 1, "", "create_hdf5_dataset"]], "CerebNet.datasets.load_data": [[15, 2, 1, "", "SubjectLoader"]], "CerebNet.datasets.load_data.SubjectLoader": [[15, 3, 1, "", "load_subject"], [15, 3, 1, "", "load_test_subject"]], "CerebNet.datasets.utils": [[16, 1, 1, "", "bounding_volume_offset"], [16, 1, 1, "", "crop_transform"], [16, 1, 1, "", "filter_blank_slices_thick"], [16, 1, 1, "", "map_label2subseg"], [16, 1, 1, "", "map_size"]], "CerebNet.datasets.wm_merge_clean": [[17, 1, 1, "", "add_cereb_wm"], [17, 1, 1, "", "cereb_subseg_lateral_mask"], [17, 1, 1, "", "correct_cereb_brainstem"], [17, 1, 1, "", "drop_disconnected_component"], [17, 1, 1, "", "filling_unknown_labels"], [17, 1, 1, "", "locating_unknowns"], [17, 1, 1, "", "save_mgh_image"], [17, 1, 1, "", "sphere"]], "CerebNet.inference": [[18, 2, 1, "", "Inference"]], "CerebNet.models": [[19, 0, 0, "-", "networks"], [20, 0, 0, "-", "sub_module"]], "CerebNet.models.networks": [[19, 2, 1, "", "FastSurferCNN"], [19, 1, 1, "", "build_model"]], "CerebNet.models.networks.FastSurferCNN": [[19, 3, 1, "", "forward"]], "CerebNet.models.sub_module": [[20, 2, 1, "", "ClassifierBlock"], [20, 2, 1, "", "CompetitiveDecoderBlock"], [20, 2, 1, "", "CompetitiveDenseBlock"], [20, 2, 1, "", "CompetitiveDenseBlockInput"], [20, 2, 1, "", "CompetitiveEncoderBlock"], [20, 2, 1, "", "CompetitiveEncoderBlockInput"]], "CerebNet.models.sub_module.ClassifierBlock": [[20, 3, 1, "", "forward"]], "CerebNet.models.sub_module.CompetitiveDecoderBlock": [[20, 3, 1, "", "forward"]], "CerebNet.models.sub_module.CompetitiveDenseBlock": [[20, 3, 1, "", "forward"]], "CerebNet.models.sub_module.CompetitiveDenseBlockInput": [[20, 3, 1, "", "forward"]], "CerebNet.models.sub_module.CompetitiveEncoderBlock": [[20, 3, 1, "", "forward"]], "CerebNet.models.sub_module.CompetitiveEncoderBlockInput": [[20, 3, 1, "", "forward"]], "CerebNet.run_prediction": [[21, 1, 1, "", "main"], [21, 1, 1, "", "setup_options"]], "CerebNet.utils": [[22, 0, 0, "-", "checkpoint"], [23, 0, 0, "-", "load_config"], [24, 0, 0, "-", "lr_scheduler"], [25, 0, 0, "-", "meters"], [26, 0, 0, "-", "metrics"], [27, 0, 0, "-", "misc"]], "CerebNet.utils.checkpoint": [[22, 1, 1, "", "is_checkpoint_epoch"]], "CerebNet.utils.load_config": [[23, 1, 1, "", "get_config"], [23, 1, 1, "", "setup_options"]], "CerebNet.utils.lr_scheduler": [[24, 2, 1, "", "CosineAnnealingWarmRestartsDecay"], [24, 2, 1, "", "CosineLR"], [24, 2, 1, "", "ReduceLROnPlateauWithRestarts"], [24, 2, 1, "", "WarmupCosineLR"], [24, 1, 1, "", "get_lr_scheduler"]], "CerebNet.utils.lr_scheduler.CosineAnnealingWarmRestartsDecay": [[24, 3, 1, "", "decay_base_lr"]], "CerebNet.utils.lr_scheduler.CosineLR": [[24, 3, 1, "", "get_epoch_lr"], [24, 3, 1, "", "lr_func_cosine"], [24, 3, 1, "", "set_lr"]], "CerebNet.utils.lr_scheduler.ReduceLROnPlateauWithRestarts": [[24, 3, 1, "", "step"]], "CerebNet.utils.lr_scheduler.WarmupCosineLR": [[24, 3, 1, "", "get_lr"]], "CerebNet.utils.meters": [[25, 2, 1, "", "Meter"], [25, 2, 1, "", "TestMeter"]], "CerebNet.utils.meters.Meter": [[25, 3, 1, "", "log_epoch"], [25, 3, 1, "", "log_iter"], [25, 3, 1, "", "log_lr"], [25, 3, 1, "", "prediction_visualize"], [25, 3, 1, "", "reset"], [25, 3, 1, "", "update_stats"], [25, 3, 1, "", "write_summary"]], "CerebNet.utils.meters.TestMeter": [[25, 3, 1, "", "metrics_per_class"]], "CerebNet.utils.metrics": [[26, 2, 1, "", "DiceScore"], [26, 1, 1, "", "dice_score"], [26, 1, 1, "", "hd"], [26, 1, 1, "", "hd95"], [26, 1, 1, "", "volume_similarity"]], "CerebNet.utils.metrics.DiceScore": [[26, 3, 1, "", "compute"], [26, 3, 1, "", "reset"], [26, 3, 1, "", "update"]], "CerebNet.utils.misc": [[27, 1, 1, "", "load_classwise_weights"], [27, 1, 1, "", "plot_predictions"], [27, 1, 1, "", "set_summary_path"], [27, 1, 1, "", "update_results_dir"], [27, 1, 1, "", "update_split_path"], [27, 1, 1, "", "visualize_batch"]], "FastSurferCNN.data_loader": [[28, 0, 0, "-", "augmentation"], [29, 0, 0, "-", "conform"], [30, 0, 0, "-", "data_utils"], [31, 0, 0, "-", "dataset"], [32, 0, 0, "-", "loader"]], "FastSurferCNN.data_loader.augmentation": [[28, 2, 1, "", "AddGaussianNoise"], [28, 2, 1, "", "AugmentationPadImage"], [28, 2, 1, "", "AugmentationRandomCrop"], [28, 2, 1, "", "ToTensor"], [28, 2, 1, "", "ToTensorTest"], [28, 2, 1, "", "ZeroPad2D"], [28, 2, 1, "", "ZeroPad2DTest"]], "FastSurferCNN.data_loader.conform": [[29, 1, 1, "", "check_affine_in_nifti"], [29, 1, 1, "", "conform"], [29, 1, 1, "", "find_img_size_by_fov"], [29, 1, 1, "", "find_min_size"], [29, 1, 1, "", "get_conformed_vox_img_size"], [29, 1, 1, "", "getscale"], [29, 1, 1, "", "is_conform"], [29, 1, 1, "", "map_image"], [29, 1, 1, "", "options_parse"], [29, 1, 1, "", "rescale"], [29, 1, 1, "", "scalecrop"]], "FastSurferCNN.data_loader.data_utils": [[30, 1, 1, "", "bbox_3d"], [30, 1, 1, "", "clean_cortex_labels"], [30, 1, 1, "", "cortex_border_mask"], [30, 1, 1, "", "create_weight_mask"], [30, 1, 1, "", "deep_sulci_and_wm_strand_mask"], [30, 1, 1, "", "fill_unknown_labels_per_hemi"], [30, 1, 1, "", "filter_blank_slices_thick"], [30, 1, 1, "", "fuse_cortex_labels"], [30, 1, 1, "", "get_labels_from_lut"], [30, 1, 1, "", "get_largest_cc"], [30, 1, 1, "", "get_thick_slices"], [30, 1, 1, "", "infer_mapping_from_lut"], [30, 1, 1, "", "load_and_conform_image"], [30, 1, 1, "", "load_image"], [30, 1, 1, "", "load_maybe_conform"], [30, 1, 1, "", "map_aparc_aseg2label"], [30, 1, 1, "", "map_label2aparc_aseg"], [30, 1, 1, "", "map_prediction_sagittal2full"], [30, 1, 1, "", "read_classes_from_lut"], [30, 1, 1, "", "sagittal_coronal_remap_lookup"], [30, 1, 1, "", "save_image"], [30, 1, 1, "", "split_cortex_labels"], [30, 1, 1, "", "transform_axial"], [30, 1, 1, "", "transform_sagittal"], [30, 1, 1, "", "unify_lateralized_labels"]], "FastSurferCNN.data_loader.dataset": [[31, 2, 1, "", "MultiScaleDataset"], [31, 2, 1, "", "MultiScaleDatasetVal"], [31, 2, 1, "", "MultiScaleOrigDataThickSlices"]], "FastSurferCNN.data_loader.dataset.MultiScaleDataset": [[31, 3, 1, "", "get_subject_names"], [31, 3, 1, "", "unify_imgs"]], "FastSurferCNN.data_loader.dataset.MultiScaleDatasetVal": [[31, 3, 1, "", "get_subject_names"]], "FastSurferCNN.data_loader.loader": [[32, 1, 1, "", "get_dataloader"]], "FastSurferCNN": [[33, 0, 0, "-", "download_checkpoints"], [34, 0, 0, "-", "generate_hdf5"], [35, 0, 0, "-", "inference"], [40, 0, 0, "-", "quick_qc"], [41, 0, 0, "-", "reduce_to_aseg"], [42, 0, 0, "-", "run_prediction"], [43, 0, 0, "-", "segstats"], [57, 0, 0, "-", "version"]], "FastSurferCNN.generate_hdf5": [[34, 2, 1, "", "H5pyDataset"]], "FastSurferCNN.generate_hdf5.H5pyDataset": [[34, 3, 1, "", "create_hdf5_dataset"], [34, 3, 1, "", "transform"]], "FastSurferCNN.inference": [[35, 2, 1, "", "Inference"]], "FastSurferCNN.inference.Inference": [[35, 3, 1, "", "eval"], [35, 3, 1, "", "get_cfg"], [35, 3, 1, "", "get_device"], [35, 3, 1, "", "get_max_size"], [35, 3, 1, "", "get_model_height"], [35, 3, 1, "", "get_model_width"], [35, 3, 1, "", "get_modelname"], [35, 3, 1, "", "get_num_classes"], [35, 3, 1, "", "get_plane"], [35, 3, 1, "", "load_checkpoint"], [35, 3, 1, "", "run"], [35, 3, 1, "", "set_cfg"], [35, 3, 1, "", "setup_model"], [35, 3, 1, "", "to"]], "FastSurferCNN.models": [[36, 0, 0, "-", "interpolation_layer"], [37, 0, 0, "-", "losses"], [38, 0, 0, "-", "networks"], [39, 0, 0, "-", "sub_module"]], "FastSurferCNN.models.interpolation_layer": [[36, 2, 1, "", "Zoom2d"], [36, 2, 1, "", "Zoom3d"]], "FastSurferCNN.models.interpolation_layer.Zoom2d": [[36, 4, 1, "", "crop_position"]], "FastSurferCNN.models.interpolation_layer.Zoom3d": [[36, 4, 1, "", "crop_position"]], "FastSurferCNN.models.losses": [[37, 2, 1, "", "CombinedLoss"], [37, 2, 1, "", "CrossEntropy2D"], [37, 2, 1, "", "DiceLoss"], [37, 1, 1, "", "get_loss_func"]], "FastSurferCNN.models.losses.CombinedLoss": [[37, 3, 1, "", "forward"]], "FastSurferCNN.models.losses.CrossEntropy2D": [[37, 3, 1, "", "forward"]], "FastSurferCNN.models.losses.DiceLoss": [[37, 3, 1, "", "forward"]], "FastSurferCNN.models.networks": [[38, 2, 1, "", "FastSurferCNN"], [38, 2, 1, "", "FastSurferCNNBase"], [38, 2, 1, "", "FastSurferVINN"], [38, 1, 1, "", "build_model"]], "FastSurferCNN.models.networks.FastSurferCNN": [[38, 3, 1, "", "forward"]], "FastSurferCNN.models.networks.FastSurferCNNBase": [[38, 3, 1, "", "forward"]], "FastSurferCNN.models.networks.FastSurferVINN": [[38, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module": [[39, 2, 1, "", "ClassifierBlock"], [39, 2, 1, "", "CompetitiveDecoderBlock"], [39, 2, 1, "", "CompetitiveDenseBlock"], [39, 2, 1, "", "CompetitiveDenseBlockInput"], [39, 2, 1, "", "CompetitiveEncoderBlock"], [39, 2, 1, "", "CompetitiveEncoderBlockInput"], [39, 2, 1, "", "GaussianNoise"], [39, 2, 1, "", "InputDenseBlock"], [39, 2, 1, "", "OutputDenseBlock"]], "FastSurferCNN.models.sub_module.ClassifierBlock": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.CompetitiveDecoderBlock": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.CompetitiveDenseBlock": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.CompetitiveDenseBlockInput": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.CompetitiveEncoderBlock": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.CompetitiveEncoderBlockInput": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.GaussianNoise": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.InputDenseBlock": [[39, 3, 1, "", "forward"]], "FastSurferCNN.models.sub_module.OutputDenseBlock": [[39, 3, 1, "", "forward"]], "FastSurferCNN.quick_qc": [[40, 1, 1, "", "check_volume"], [40, 1, 1, "", "get_ventricle_bg_intersection_volume"], [40, 1, 1, "", "options_parse"]], "FastSurferCNN.reduce_to_aseg": [[41, 1, 1, "", "create_mask"], [41, 1, 1, "", "flip_wm_islands"], [41, 1, 1, "", "options_parse"], [41, 1, 1, "", "reduce_to_aseg"]], "FastSurferCNN.run_prediction": [[42, 2, 1, "", "RunModelOnData"], [42, 1, 1, "", "args2cfg"], [42, 1, 1, "", "set_up_cfgs"]], "FastSurferCNN.run_prediction.RunModelOnData": [[42, 3, 1, "", "async_save_img"], [42, 3, 1, "", "conform_and_save_orig"], [42, 3, 1, "", "get_num_classes"], [42, 3, 1, "", "get_prediction"], [42, 3, 1, "", "pipeline_conform_and_save_orig"], [42, 4, 1, "", "pool"], [42, 3, 1, "", "save_img"], [42, 3, 1, "", "set_model"], [42, 3, 1, "", "set_up_model_params"]], "FastSurferCNN.segstats": [[43, 2, 1, "", "HelpFormatter"], [43, 1, 1, "", "borders"], [43, 1, 1, "", "crop_patch_to_mask"], [43, 1, 1, "", "global_stats"], [43, 1, 1, "", "grow_patch"], [43, 1, 1, "", "loadfile_full"], [43, 1, 1, "", "main"], [43, 1, 1, "", "make_arguments"], [43, 1, 1, "", "patch_filter"], [43, 1, 1, "", "patch_neighbors"], [43, 1, 1, "", "pv_calc"], [43, 1, 1, "", "pv_calc_patch"], [43, 1, 1, "", "read_classes_from_lut"], [43, 1, 1, "", "seg_borders"], [43, 1, 1, "", "uniform_filter"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "write_statsfile"]], "FastSurferCNN.utils": [[44, 0, 0, "-", "arg_types"], [45, 0, 0, "-", "checkpoint"], [46, 0, 0, "-", "common"], [47, 0, 0, "-", "load_config"], [48, 0, 0, "-", "logging"], [49, 0, 0, "-", "lr_scheduler"], [50, 0, 0, "-", "mapper"], [51, 0, 0, "-", "meters"], [52, 0, 0, "-", "metrics"], [53, 0, 0, "-", "misc"], [54, 0, 0, "-", "parser_defaults"], [55, 0, 0, "-", "run_tools"], [56, 0, 0, "-", "threads"]], "FastSurferCNN.utils.arg_types": [[44, 1, 1, "", "float_gt_zero_and_le_one"], [44, 1, 1, "", "int_ge_zero"], [44, 1, 1, "", "int_gt_zero"], [44, 1, 1, "", "target_dtype"], [44, 1, 1, "", "unquote_str"], [44, 1, 1, "", "vox_size"]], "FastSurferCNN.utils.checkpoint": [[45, 2, 1, "", "CheckpointConfigDict"], [45, 1, 1, "", "check_and_download_ckpts"], [45, 1, 1, "", "create_checkpoint_dir"], [45, 1, 1, "", "download_checkpoint"], [45, 1, 1, "", "get_checkpoint"], [45, 1, 1, "", "get_checkpoint_path"], [45, 1, 1, "", "get_checkpoints"], [45, 1, 1, "", "load_checkpoint_config"], [45, 1, 1, "", "load_checkpoint_config_defaults"], [45, 1, 1, "", "load_from_checkpoint"], [45, 1, 1, "", "remove_ckpt"], [45, 1, 1, "", "save_checkpoint"]], "FastSurferCNN.utils.common": [[46, 2, 1, "", "SerialExecutor"], [46, 2, 1, "", "SubjectDirectory"], [46, 2, 1, "", "SubjectList"], [46, 1, 1, "", "assert_no_root"], [46, 1, 1, "", "find_device"], [46, 1, 1, "", "handle_cuda_memory_exception"], [46, 1, 1, "", "iterate"], [46, 1, 1, "", "pipeline"]], "FastSurferCNN.utils.common.SerialExecutor": [[46, 3, 1, "", "map"], [46, 3, 1, "", "submit"]], "FastSurferCNN.utils.common.SubjectDirectory": [[46, 4, 1, "", "asegdkt_segfile"], [46, 3, 1, "", "can_resolve_attribute"], [46, 3, 1, "", "can_resolve_filename"], [46, 4, 1, "", "conf_name"], [46, 4, 1, "", "copy_orig_name"], [46, 3, 1, "", "fileexists_by_attribute"], [46, 3, 1, "", "fileexists_in_subject_folder"], [46, 3, 1, "", "filename_by_attribute"], [46, 3, 1, "", "filename_in_subject_folder"], [46, 3, 1, "", "get_attribute"], [46, 3, 1, "", "has_attribute"], [46, 4, 1, "", "id"], [46, 4, 1, "", "main_segfile"], [46, 4, 1, "", "orig_name"], [46, 4, 1, "", "segfile"], [46, 4, 1, "", "subject_dir"]], "FastSurferCNN.utils.common.SubjectList": [[46, 3, 1, "", "are_all_subject_files"], [46, 4, 1, "", "flags"], [46, 3, 1, "", "get_common_suffix"], [46, 3, 1, "", "make_subjects_dir"]], "FastSurferCNN.utils.load_config": [[47, 1, 1, "", "get_config"], [47, 1, 1, "", "load_config"]], "FastSurferCNN.utils.logging": [[48, 1, 1, "", "setup_logging"]], "FastSurferCNN.utils.lr_scheduler": [[49, 1, 1, "", "get_lr_scheduler"]], "FastSurferCNN.utils.mapper": [[50, 2, 1, "", "ColorLookupTable"], [50, 2, 1, "", "JsonColorLookupTable"], [50, 2, 1, "", "Mapper"], [50, 2, 1, "", "TSVLookupTable"], [50, 1, 1, "", "is_int"], [50, 1, 1, "", "to_same_type"]], "FastSurferCNN.utils.mapper.ColorLookupTable": [[50, 4, 1, "", "classes"], [50, 4, 1, "", "color_palette"], [50, 3, 1, "", "colormap"], [50, 3, 1, "", "get_color_by_index"], [50, 3, 1, "", "getitem_by_index"], [50, 3, 1, "", "labelname2id"], [50, 3, 1, "", "labelname2index"], [50, 4, 1, "", "name"]], "FastSurferCNN.utils.mapper.JsonColorLookupTable": [[50, 3, 1, "", "dataframe"], [50, 3, 1, "", "labelname2id"]], "FastSurferCNN.utils.mapper.Mapper": [[50, 3, 1, "", "chain"], [50, 3, 1, "", "is_bijective"], [50, 3, 1, "", "make_classmapper"], [50, 3, 1, "", "map"], [50, 4, 1, "", "max_label"], [50, 4, 1, "", "name"], [50, 3, 1, "", "reversed_dict"], [50, 4, 1, "", "source_space"], [50, 4, 1, "", "target_space"], [50, 3, 1, "", "update"]], "FastSurferCNN.utils.mapper.TSVLookupTable": [[50, 3, 1, "", "dataframe"], [50, 3, 1, "", "getitem_by_index"], [50, 3, 1, "", "labelname2id"]], "FastSurferCNN.utils.meters": [[51, 2, 1, "", "Meter"]], "FastSurferCNN.utils.meters.Meter": [[51, 3, 1, "", "disable_confusion_mat"], [51, 3, 1, "", "enable_confusion_mat"], [51, 3, 1, "", "log_epoch"], [51, 3, 1, "", "log_iter"], [51, 3, 1, "", "reset"], [51, 3, 1, "", "update_stats"], [51, 3, 1, "", "write_summary"]], "FastSurferCNN.utils.metrics": [[52, 2, 1, "", "DiceScore"], [52, 1, 1, "", "dice_score"], [52, 1, 1, "", "iou_score"], [52, 1, 1, "", "precision_recall"]], "FastSurferCNN.utils.metrics.DiceScore": [[52, 3, 1, "", "comput_dice_cnf"], [52, 3, 1, "", "compute_dsc"], [52, 3, 1, "", "reset"], [52, 3, 1, "", "update"]], "FastSurferCNN.utils.misc": [[53, 1, 1, "", "check_path"], [53, 1, 1, "", "find_latest_experiment"], [53, 1, 1, "", "plot_confusion_matrix"], [53, 1, 1, "", "plot_predictions"], [53, 1, 1, "", "update_num_steps"]], "FastSurferCNN.utils.parser_defaults": [[54, 2, 1, "", "CanAddArguments"], [54, 1, 1, "", "add_arguments"], [54, 1, 1, "", "add_plane_flags"]], "FastSurferCNN.utils.parser_defaults.CanAddArguments": [[54, 3, 1, "", "add_argument"]], "FastSurferCNN.utils.run_tools": [[55, 2, 1, "", "MessageBuffer"], [55, 2, 1, "", "Popen"], [55, 2, 1, "", "PyPopen"]], "FastSurferCNN.utils.run_tools.Popen": [[55, 3, 1, "", "as_future"], [55, 3, 1, "", "finish"]], "FastSurferCNN.utils.threads": [[56, 1, 1, "", "get_num_threads"]], "FastSurferCNN.version": [[57, 2, 1, "", "VersionDict"], [57, 1, 1, "", "filter_git_status"], [57, 1, 1, "", "get_default_version_info"], [57, 1, 1, "", "has_git"], [57, 1, 1, "", "main"], [57, 1, 1, "", "make_parser"], [57, 1, 1, "", "parse_build_file"], [57, 1, 1, "", "print_build_file"], [57, 1, 1, "", "read_and_close_version"], [57, 1, 1, "", "read_version_from_project_file"], [57, 1, 1, "", "section"]], "recon_surf": [[58, 0, 0, "-", "N4_bias_correct"], [59, 0, 0, "-", "align_points"], [60, 0, 0, "-", "align_seg"], [61, 0, 0, "-", "create_annotation"], [62, 0, 0, "-", "fs_balabels"], [63, 0, 0, "-", "lta"], [64, 0, 0, "-", "map_surf_label"], [65, 0, 0, "-", "paint_cc_into_pred"], [66, 0, 0, "-", "rewrite_mc_surface"], [67, 0, 0, "-", "rotate_sphere"], [68, 0, 0, "-", "sample_parc"], [69, 0, 0, "-", "smooth_aparc"], [70, 0, 0, "-", "spherically_project_wrapper"]], "recon_surf.N4_bias_correct": [[58, 1, 1, "", "get_brain_centroid"], [58, 1, 1, "", "get_image_mean"], [58, 1, 1, "", "get_tal_origin_voxel"], [58, 1, 1, "", "itk_n4_bfcorrection"], [58, 1, 1, "", "normalize_img"], [58, 1, 1, "", "normalize_wm_aseg"], [58, 1, 1, "", "normalize_wm_mask_ball"], [58, 1, 1, "", "options_parse"], [58, 1, 1, "", "read_talairach_xfm"]], "recon_surf.align_points": [[59, 1, 1, "", "angles2rmat"], [59, 1, 1, "", "find_affine"], [59, 1, 1, "", "find_rigid"], [59, 1, 1, "", "find_rotation"], [59, 1, 1, "", "rmat2angles"]], "recon_surf.align_seg": [[60, 1, 1, "", "align_flipped"], [60, 1, 1, "", "align_seg_centroids"], [60, 1, 1, "", "get_seg_centroids"], [60, 1, 1, "", "get_vox2ras"], [60, 1, 1, "", "options_parse"]], "recon_surf.create_annotation": [[61, 1, 1, "", "build_annot"], [61, 1, 1, "", "create_annotation"], [61, 1, 1, "", "map_multiple_labels"], [61, 1, 1, "", "options_parse"], [61, 1, 1, "", "read_colortable"], [61, 1, 1, "", "read_multiple_labels"], [61, 1, 1, "", "write_annot"]], "recon_surf.fs_balabels": [[62, 1, 1, "", "options_parse"], [62, 1, 1, "", "read_colortables"]], "recon_surf.lta": [[63, 1, 1, "", "writeLTA"]], "recon_surf.map_surf_label": [[64, 1, 1, "", "getSurfCorrespondence"], [64, 1, 1, "", "mapSurfLabel"], [64, 1, 1, "", "options_parse"], [64, 1, 1, "", "writeSurfLabel"]], "recon_surf.paint_cc_into_pred": [[65, 1, 1, "", "argument_parse"], [65, 1, 1, "", "paint_in_cc"]], "recon_surf.rewrite_mc_surface": [[66, 1, 1, "", "options_parse"], [66, 1, 1, "", "resafe_surface"]], "recon_surf.rotate_sphere": [[67, 1, 1, "", "align_aparc_centroids"], [67, 1, 1, "", "options_parse"]], "recon_surf.sample_parc": [[68, 1, 1, "", "construct_adj_cluster"], [68, 1, 1, "", "find_all_islands"], [68, 1, 1, "", "options_parse"], [68, 1, 1, "", "replace_labels"], [68, 1, 1, "", "sample_img"], [68, 1, 1, "", "sample_nearest_nonzero"], [68, 1, 1, "", "sample_parc"]], "recon_surf.smooth_aparc": [[69, 1, 1, "", "bincount2D_vectorized"], [69, 1, 1, "", "get_adjM"], [69, 1, 1, "", "main"], [69, 1, 1, "", "mode_filter"], [69, 1, 1, "", "options_parse"], [69, 1, 1, "", "smooth_aparc"]], "recon_surf.spherically_project_wrapper": [[70, 1, 1, "", "call"], [70, 1, 1, "", "setup_options"], [70, 1, 1, "", "spherical_wrapper"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 1, 2, 3, 4, 5, 6, 7, 8, 71, 72], "cerebnet": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 80], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 72, 81], "cerebnet_dataload": 1, "cerebnet_dataset": 2, "cerebnet_model": 3, "cerebnet_util": 4, "data_load": [6, 10, 11, 12, 13, 28, 29, 30, 31, 32], "model": [7, 19, 20, 36, 37, 38, 39], "util": [8, 16, 22, 23, 24, 25, 26, 27, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "apply_warp": 9, "augment": [10, 28], "data_util": [11, 30], "dataset": [12, 14, 15, 16, 17, 31], "loader": [13, 32], "generate_hdf5": [14, 34], "load_data": 15, "wm_merge_clean": 17, "infer": [18, 35], "network": [19, 38], "sub_modul": [20, 39], "run_predict": [21, 42], "checkpoint": [22, 45], "load_config": [23, 47], "lr_schedul": [24, 49], "meter": [25, 51], "metric": [26, 52], "misc": [27, 53], "fastsurfercnn": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "conform": 29, "download_checkpoint": 33, "interpolation_lay": 36, "loss": 37, "quick_qc": 40, "reduce_to_aseg": 41, "segstat": 43, "arg_typ": 44, "common": 46, "log": 48, "mapper": 50, "parser_default": 54, "run_tool": 55, "thread": 56, "version": [57, 79, 82], "recon_surf": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "n4_bias_correct": 58, "align_point": 59, "align_seg": 60, "create_annot": 61, "fs_balabel": 62, "lta": 63, "map_surf_label": 64, "paint_cc_into_pr": 65, "rewrite_mc_surfac": 66, "rotate_spher": 67, "sample_parc": 68, "smooth_aparc": 69, "spherically_project_wrapp": 70, "fastsurf": [71, 73, 75, 77, 78, 79], "welcom": 73, "": 73, "document": 73, "contributor": 74, "coven": 74, "code": [74, 75], "conduct": 74, "our": 74, "pledg": 74, "standard": 74, "respons": 74, "scope": 74, "enforc": 74, "attribut": [74, 75], "contribut": 75, "report": [75, 82], "bug": 75, "befor": 75, "submit": 75, "how": 75, "do": 75, "i": 75, "good": 75, "suggest": 75, "enhanc": 75, "an": 75, "manual": 76, "edit": 76, "pipelin": [76, 78], "possibl": 76, "1": [76, 77, 79], "t1": 76, "pre": 76, "process": [76, 77], "2": [76, 77, 79], "segment": [76, 77, 78, 80, 81], "3": [76, 77, 79], "brainmask": 76, "exampl": [77, 81], "docker": [77, 78, 79], "singular": [77, 79], "flag": [77, 78], "nativ": [77, 79], "subjectx": 77, "parallel": 77, "hemi": 77, "4": [77, 79], "multipl": 77, "subject": 77, "5": [77, 79], "quick": 77, "6": 77, "run": [77, 78, 85], "slurm": [77, 85], "cluster": 77, "via": 77, "requir": [78, 79, 81], "argument": 78, "when": 78, "surfac": [78, 80, 81], "modul": [78, 80, 81], "option": 78, "other": 78, "instal": [79, 81], "linux": 79, "ubuntu": 79, "20": 79, "04": 79, "22": 79, "system": [79, 81], "packag": 79, "conda": 79, "python": 79, "environ": 79, "freesurf": [79, 81], "amd": 79, "gpu": 79, "experiment": 79, "maco": 79, "current": 79, "onli": 79, "support": [79, 82], "intel": 79, "cpu": 79, "git": 79, "bash": 79, "appl": 79, "ai": 79, "acceler": 79, "window": 79, "output": [80, 81], "file": [80, 81], "overview": [81, 83], "reconstruct": 81, "input": 81, "imag": 81, "get": 81, "start": 81, "usag": 81, "fastsurfer_flag": 81, "minimum": 81, "expert": 81, "downstream": 81, "intend": 81, "us": 81, "acknowledg": 81, "secur": 82, "polici": 82, "vulner": 82, "script": 84, "srun_fastsurf": 85, "sh": 85, "debug": 85}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"API CerebNet References": [[0, "api-cerebnet-references"]], "API CerebNet_dataloader References": [[1, "api-cerebnet-dataloader-references"]], "API CerebNet_datasets References": [[2, "api-cerebnet-datasets-references"]], "API CerebNet_models References": [[3, "api-cerebnet-models-references"]], "API CerebNet_utils References": [[4, "api-cerebnet-utils-references"]], "API References": [[5, "api-references"]], "API data_loader References": [[6, "api-data-loader-references"]], "API models References": [[7, "api-models-references"]], "API utils References": [[8, "api-utils-references"]], "CerebNet.apply_warp": [[9, "module-CerebNet.apply_warp"]], "CerebNet.data_loader.augmentation": [[10, "module-CerebNet.data_loader.augmentation"]], "CerebNet.data_loader.data_utils": [[11, "module-CerebNet.data_loader.data_utils"]], "CerebNet.data_loader.dataset": [[12, "module-CerebNet.data_loader.dataset"]], "CerebNet.data_loader.loader": [[13, "module-CerebNet.data_loader.loader"]], "CerebNet.datasets.generate_hdf5": [[14, "module-CerebNet.datasets.generate_hdf5"]], "CerebNet.datasets.load_data": [[15, "module-CerebNet.datasets.load_data"]], "CerebNet.datasets.utils": [[16, "module-CerebNet.datasets.utils"]], "CerebNet.datasets.wm_merge_clean": [[17, "module-CerebNet.datasets.wm_merge_clean"]], "CerebNet.inference": [[18, "module-CerebNet.inference"]], "CerebNet.models.networks": [[19, "module-CerebNet.models.networks"]], "CerebNet.models.sub_module": [[20, "module-CerebNet.models.sub_module"]], "CerebNet.run_prediction": [[21, "module-CerebNet.run_prediction"]], "CerebNet.utils.checkpoint": [[22, "module-CerebNet.utils.checkpoint"]], "CerebNet.utils.load_config": [[23, "module-CerebNet.utils.load_config"]], "CerebNet.utils.lr_scheduler": [[24, "module-CerebNet.utils.lr_scheduler"]], "CerebNet.utils.meters": [[25, "module-CerebNet.utils.meters"]], "CerebNet.utils.metrics": [[26, "module-CerebNet.utils.metrics"]], "CerebNet.utils.misc": [[27, "module-CerebNet.utils.misc"]], "FastSurferCNN.data_loader.augmentation": [[28, "module-FastSurferCNN.data_loader.augmentation"]], "FastSurferCNN.data_loader.conform": [[29, "module-FastSurferCNN.data_loader.conform"]], "FastSurferCNN.data_loader.data_utils": [[30, "module-FastSurferCNN.data_loader.data_utils"]], "FastSurferCNN.data_loader.dataset": [[31, "module-FastSurferCNN.data_loader.dataset"]], "FastSurferCNN.data_loader.loader": [[32, "module-FastSurferCNN.data_loader.loader"]], "FastSurferCNN.download_checkpoints": [[33, "module-FastSurferCNN.download_checkpoints"]], "FastSurferCNN.generate_hdf5": [[34, "module-FastSurferCNN.generate_hdf5"]], "FastSurferCNN.inference": [[35, "module-FastSurferCNN.inference"]], "FastSurferCNN.models.interpolation_layer": [[36, "module-FastSurferCNN.models.interpolation_layer"]], "FastSurferCNN.models.losses": [[37, "module-FastSurferCNN.models.losses"]], "FastSurferCNN.models.networks": [[38, "module-FastSurferCNN.models.networks"]], "FastSurferCNN.models.sub_module": [[39, "module-FastSurferCNN.models.sub_module"]], "FastSurferCNN.quick_qc": [[40, "module-FastSurferCNN.quick_qc"]], "FastSurferCNN.reduce_to_aseg": [[41, "module-FastSurferCNN.reduce_to_aseg"]], "FastSurferCNN.run_prediction": [[42, "module-FastSurferCNN.run_prediction"]], "FastSurferCNN.segstats": [[43, "module-FastSurferCNN.segstats"]], "FastSurferCNN.utils.arg_types": [[44, "module-FastSurferCNN.utils.arg_types"]], "FastSurferCNN.utils.checkpoint": [[45, "module-FastSurferCNN.utils.checkpoint"]], "FastSurferCNN.utils.common": [[46, "module-FastSurferCNN.utils.common"]], "FastSurferCNN.utils.load_config": [[47, "module-FastSurferCNN.utils.load_config"]], "FastSurferCNN.utils.logging": [[48, "module-FastSurferCNN.utils.logging"]], "FastSurferCNN.utils.lr_scheduler": [[49, "module-FastSurferCNN.utils.lr_scheduler"]], "FastSurferCNN.utils.mapper": [[50, "module-FastSurferCNN.utils.mapper"]], "FastSurferCNN.utils.meters": [[51, "module-FastSurferCNN.utils.meters"]], "FastSurferCNN.utils.metrics": [[52, "module-FastSurferCNN.utils.metrics"]], "FastSurferCNN.utils.misc": [[53, "module-FastSurferCNN.utils.misc"]], "FastSurferCNN.utils.parser_defaults": [[54, "module-FastSurferCNN.utils.parser_defaults"]], "FastSurferCNN.utils.run_tools": [[55, "module-FastSurferCNN.utils.run_tools"]], "FastSurferCNN.utils.threads": [[56, "module-FastSurferCNN.utils.threads"]], "FastSurferCNN.version": [[57, "module-FastSurferCNN.version"]], "recon_surf.N4_bias_correct": [[58, "module-recon_surf.N4_bias_correct"]], "recon_surf.align_points": [[59, "module-recon_surf.align_points"]], "recon_surf.align_seg": [[60, "module-recon_surf.align_seg"]], "recon_surf.create_annotation": [[61, "module-recon_surf.create_annotation"]], "recon_surf.fs_balabels": [[62, "module-recon_surf.fs_balabels"]], "recon_surf.lta": [[63, "module-recon_surf.lta"]], "recon_surf.map_surf_label": [[64, "module-recon_surf.map_surf_label"]], "recon_surf.paint_cc_into_pred": [[65, "module-recon_surf.paint_cc_into_pred"]], "recon_surf.rewrite_mc_surface": [[66, "module-recon_surf.rewrite_mc_surface"]], "recon_surf.rotate_sphere": [[67, "module-recon_surf.rotate_sphere"]], "recon_surf.sample_parc": [[68, "module-recon_surf.sample_parc"]], "recon_surf.smooth_aparc": [[69, "module-recon_surf.smooth_aparc"]], "recon_surf.spherically_project_wrapper": [[70, "module-recon_surf.spherically_project_wrapper"]], "FastSurfer API": [[71, "fastsurfer-api"]], "API recon_surf References": [[72, "api-recon-surf-references"]], "Welcome to FastSurfer\u2019s documentation!": [[73, "welcome-to-fastsurfer-s-documentation"]], "Contributor Covenant Code of Conduct": [[74, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[74, "our-pledge"]], "Our Standards": [[74, "our-standards"]], "Our Responsibilities": [[74, "our-responsibilities"]], "Scope": [[74, "scope"]], "Enforcement": [[74, "enforcement"]], "Attribution": [[74, "attribution"], [75, "attribution"]], "Contributing to FastSurfer": [[75, "contributing-to-fastsurfer"]], "Reporting Bugs": [[75, "reporting-bugs"]], "Before Submitting a Bug Report": [[75, "before-submitting-a-bug-report"]], "How Do I Submit a Good Bug Report?": [[75, "how-do-i-submit-a-good-bug-report"]], "Suggesting Enhancements": [[75, "suggesting-enhancements"]], "Before Submitting an Enhancement": [[75, "before-submitting-an-enhancement"]], "How Do I Submit a Good Enhancement Suggestion?": [[75, "how-do-i-submit-a-good-enhancement-suggestion"]], "Contributing Code": [[75, "contributing-code"]], "Manual Edits": [[76, "manual-edits"]], "Pipeline": [[76, "pipeline"]], "Possible Edits": [[76, "possible-edits"]], "1. T1 Pre-Processing:": [[76, "t1-pre-processing"]], "2. Segmentation Edits": [[76, "segmentation-edits"]], "3. Brainmask Edits:": [[76, "brainmask-edits"]], "Examples": [[77, "examples"], [81, "examples"]], "Example 1: FastSurfer Docker": [[77, "example-1-fastsurfer-docker"]], "Example 2: FastSurfer Singularity": [[77, "example-2-fastsurfer-singularity"]], "Singularity Flags": [[77, "singularity-flags"]], "FastSurfer Flags": [[77, "fastsurfer-flags"], [78, "fastsurfer-flags"]], "Example 3: Native FastSurfer on subjectX with parallel processing of hemis": [[77, "example-3-native-fastsurfer-on-subjectx-with-parallel-processing-of-hemis"]], "Example 4: FastSurfer on multiple subjects": [[77, "example-4-fastsurfer-on-multiple-subjects"]], "Docker": [[77, "docker"], [79, "docker"]], "Singularity": [[77, "singularity"], [79, "singularity"]], "Native": [[77, "native"], [79, "native"]], "Flags": [[77, "flags"]], "Example 5: Quick Segmentation": [[77, "example-5-quick-segmentation"]], "Example 6: Running FastSurfer on a SLURM cluster via Singularity": [[77, "example-6-running-fastsurfer-on-a-slurm-cluster-via-singularity"]], "Required arguments": [[78, "required-arguments"]], "Required for docker when running surface module": [[78, "required-for-docker-when-running-surface-module"]], "Segmentation pipeline arguments (optional)": [[78, "segmentation-pipeline-arguments-optional"]], "Surface pipeline arguments (optional)": [[78, "surface-pipeline-arguments-optional"]], "Other": [[78, "other"]], "Installation": [[79, "installation"], [81, "installation"]], "Linux": [[79, "linux"]], "Native (Ubuntu 20.04 or Ubuntu 22.04)": [[79, "native-ubuntu-20-04-or-ubuntu-22-04"]], "1. System Packages": [[79, "system-packages"]], "2. Conda for python": [[79, "conda-for-python"]], "3. FastSurfer": [[79, "fastsurfer"]], "4. Python environment": [[79, "python-environment"]], "5. FreeSurfer": [[79, "freesurfer"]], "AMD GPUs (experimental)": [[79, "amd-gpus-experimental"]], "MacOS": [[79, "macos"]], "Docker (currently only supported for Intel CPUs)": [[79, "docker-currently-only-supported-for-intel-cpus"]], "1. Git and Bash": [[79, "git-and-bash"]], "2. Python": [[79, "python"]], "3. FastSurfer and Requirements": [[79, "fastsurfer-and-requirements"]], "4. Apple AI Accelerator support": [[79, "apple-ai-accelerator-support"]], "Windows": [[79, "windows"]], "Docker (CPU version)": [[79, "docker-cpu-version"]], "Docker (GPU version)": [[79, "docker-gpu-version"]], "Output files": [[80, "output-files"], [81, "output-files"]], "Segmentation module": [[80, "segmentation-module"]], "Cerebnet module": [[80, "cerebnet-module"]], "Surface module": [[80, "surface-module"]], "Overview": [[81, "overview"], [83, "overview"]], "Segmentation Modules": [[81, "segmentation-modules"]], "Surface reconstruction": [[81, "surface-reconstruction"]], "Requirements to input images": [[81, "requirements-to-input-images"]], "Getting started": [[81, "getting-started"]], "Usage": [[81, "usage"]], "FastSurfer_Flags": [[81, "fastsurfer-flags"]], "System Requirements": [[81, "system-requirements"]], "Minimum Requirements:": [[81, "minimum-requirements"]], "Expert usage": [[81, "expert-usage"]], "FreeSurfer Downstream Modules": [[81, "freesurfer-downstream-modules"]], "Intended Use": [[81, "intended-use"]], "References": [[81, "references"]], "Acknowledgements": [[81, "acknowledgements"]], "Security Policy": [[82, "security-policy"]], "Supported Versions": [[82, "supported-versions"]], "Reporting a Vulnerability": [[82, "reporting-a-vulnerability"]], "Scripts": [[84, "scripts"]], "SLURM: srun_fastsurfer.sh": [[85, "slurm-srun-fastsurfer-sh"]], "Debugging SLURM runs": [[85, "debugging-slurm-runs"]]}, "indexentries": {"cerebnet.apply_warp": [[9, "module-CerebNet.apply_warp"]], "main() (in module cerebnet.apply_warp)": [[9, "CerebNet.apply_warp.main"]], "module": [[9, "module-CerebNet.apply_warp"], [10, "module-CerebNet.data_loader.augmentation"], [11, "module-CerebNet.data_loader.data_utils"], [12, "module-CerebNet.data_loader.dataset"], [13, "module-CerebNet.data_loader.loader"], [14, "module-CerebNet.datasets.generate_hdf5"], [15, "module-CerebNet.datasets.load_data"], [16, "module-CerebNet.datasets.utils"], [17, "module-CerebNet.datasets.wm_merge_clean"], [18, "module-CerebNet.inference"], [19, "module-CerebNet.models.networks"], [20, "module-CerebNet.models.sub_module"], [21, "module-CerebNet.run_prediction"], [22, "module-CerebNet.utils.checkpoint"], [23, "module-CerebNet.utils.load_config"], [24, "module-CerebNet.utils.lr_scheduler"], [25, "module-CerebNet.utils.meters"], [26, "module-CerebNet.utils.metrics"], [27, "module-CerebNet.utils.misc"], [28, "module-FastSurferCNN.data_loader.augmentation"], [29, "module-FastSurferCNN.data_loader.conform"], [30, "module-FastSurferCNN.data_loader.data_utils"], [31, "module-FastSurferCNN.data_loader.dataset"], [32, "module-FastSurferCNN.data_loader.loader"], [33, "module-FastSurferCNN.download_checkpoints"], [34, "module-FastSurferCNN.generate_hdf5"], [35, "module-FastSurferCNN.inference"], [36, "module-FastSurferCNN.models.interpolation_layer"], [37, "module-FastSurferCNN.models.losses"], [38, "module-FastSurferCNN.models.networks"], [39, "module-FastSurferCNN.models.sub_module"], [40, "module-FastSurferCNN.quick_qc"], [41, "module-FastSurferCNN.reduce_to_aseg"], [42, "module-FastSurferCNN.run_prediction"], [43, "module-FastSurferCNN.segstats"], [44, "module-FastSurferCNN.utils.arg_types"], [45, "module-FastSurferCNN.utils.checkpoint"], [46, "module-FastSurferCNN.utils.common"], [47, "module-FastSurferCNN.utils.load_config"], [48, "module-FastSurferCNN.utils.logging"], [49, "module-FastSurferCNN.utils.lr_scheduler"], [50, "module-FastSurferCNN.utils.mapper"], [51, "module-FastSurferCNN.utils.meters"], [52, "module-FastSurferCNN.utils.metrics"], [53, "module-FastSurferCNN.utils.misc"], [54, "module-FastSurferCNN.utils.parser_defaults"], [55, "module-FastSurferCNN.utils.run_tools"], [56, "module-FastSurferCNN.utils.threads"], [57, "module-FastSurferCNN.version"], [58, "module-recon_surf.N4_bias_correct"], [59, "module-recon_surf.align_points"], [60, "module-recon_surf.align_seg"], [61, "module-recon_surf.create_annotation"], [62, "module-recon_surf.fs_balabels"], [63, "module-recon_surf.lta"], [64, "module-recon_surf.map_surf_label"], [65, "module-recon_surf.paint_cc_into_pred"], [66, "module-recon_surf.rewrite_mc_surface"], [67, "module-recon_surf.rotate_sphere"], [68, "module-recon_surf.sample_parc"], [69, "module-recon_surf.smooth_aparc"], [70, "module-recon_surf.spherically_project_wrapper"]], "save_nii_image() (in module cerebnet.apply_warp)": [[9, "CerebNet.apply_warp.save_nii_image"]], "cerebnet.data_loader.augmentation": [[10, "module-CerebNet.data_loader.augmentation"]], "randomaffine (class in cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.RandomAffine"]], "randombiasfield (class in cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.RandomBiasField"]], "randomflip (class in cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.RandomFlip"]], "randomlabelstoimage (class in cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.RandomLabelsToImage"]], "totensor (class in cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.ToTensor"]], "totensortest (class in cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.ToTensorTest"]], "sample_intensity_stats_from_image() (in module cerebnet.data_loader.augmentation)": [[10, "CerebNet.data_loader.augmentation.sample_intensity_stats_from_image"]], "cerebnet.data_loader.data_utils": [[11, "module-CerebNet.data_loader.data_utils"]], "create_weight_mask2d() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.create_weight_mask2d"]], "filter_blank_slices_thick() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.filter_blank_slices_thick"]], "get_aseg_cereb_mask() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.get_aseg_cereb_mask"]], "map_prediction_sagittal2full() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.map_prediction_sagittal2full"]], "map_sag2label() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.map_sag2label"]], "slice_lia2ras() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.slice_lia2ras"]], "slice_ras2lia() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.slice_ras2lia"]], "transform_axial() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.transform_axial"]], "transform_axial2sagittal() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.transform_axial2sagittal"]], "transform_coronal() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.transform_coronal"]], "transform_sagittal() (in module cerebnet.data_loader.data_utils)": [[11, "CerebNet.data_loader.data_utils.transform_sagittal"]], "cerebdataset (class in cerebnet.data_loader.dataset)": [[12, "CerebNet.data_loader.dataset.CerebDataset"]], "cerebnet.data_loader.dataset": [[12, "module-CerebNet.data_loader.dataset"]], "subjectdataset (class in cerebnet.data_loader.dataset)": [[12, "CerebNet.data_loader.dataset.SubjectDataset"]], "testloader (class in cerebnet.data_loader.dataset)": [[12, "CerebNet.data_loader.dataset.TestLoader"]], "locate_mask_bbox() (cerebnet.data_loader.dataset.subjectdataset method)": [[12, "CerebNet.data_loader.dataset.SubjectDataset.locate_mask_bbox"]], "plane (cerebnet.data_loader.dataset.subjectdataset property)": [[12, "CerebNet.data_loader.dataset.SubjectDataset.plane"]], "set_plane() (cerebnet.data_loader.dataset.subjectdataset method)": [[12, "CerebNet.data_loader.dataset.SubjectDataset.set_plane"]], "cerebnet.data_loader.loader": [[13, "module-CerebNet.data_loader.loader"]], "get_dataloader() (in module cerebnet.data_loader.loader)": [[13, "CerebNet.data_loader.loader.get_dataloader"]], "cerebnet.datasets.generate_hdf5": [[14, "module-CerebNet.datasets.generate_hdf5"]], "cerebnetdataset (class in cerebnet.datasets.generate_hdf5)": [[14, "CerebNet.datasets.generate_hdf5.CerebNetDataset"]], "create_hdf5_dataset() (cerebnet.datasets.generate_hdf5.cerebnetdataset method)": [[14, "CerebNet.datasets.generate_hdf5.CerebNetDataset.create_hdf5_dataset"]], "cerebnet.datasets.load_data": [[15, "module-CerebNet.datasets.load_data"]], "subjectloader (class in cerebnet.datasets.load_data)": [[15, "CerebNet.datasets.load_data.SubjectLoader"]], "load_subject() (cerebnet.datasets.load_data.subjectloader method)": [[15, "CerebNet.datasets.load_data.SubjectLoader.load_subject"]], "load_test_subject() (cerebnet.datasets.load_data.subjectloader method)": [[15, "CerebNet.datasets.load_data.SubjectLoader.load_test_subject"]], "cerebnet.datasets.utils": [[16, "module-CerebNet.datasets.utils"]], "bounding_volume_offset() (in module cerebnet.datasets.utils)": [[16, "CerebNet.datasets.utils.bounding_volume_offset"]], "crop_transform() (in module cerebnet.datasets.utils)": [[16, "CerebNet.datasets.utils.crop_transform"]], "filter_blank_slices_thick() (in module cerebnet.datasets.utils)": [[16, "CerebNet.datasets.utils.filter_blank_slices_thick"]], "map_label2subseg() (in module cerebnet.datasets.utils)": [[16, "CerebNet.datasets.utils.map_label2subseg"]], "map_size() (in module cerebnet.datasets.utils)": [[16, "CerebNet.datasets.utils.map_size"]], "cerebnet.datasets.wm_merge_clean": [[17, "module-CerebNet.datasets.wm_merge_clean"]], "add_cereb_wm() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.add_cereb_wm"]], "cereb_subseg_lateral_mask() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.cereb_subseg_lateral_mask"]], "correct_cereb_brainstem() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.correct_cereb_brainstem"]], "drop_disconnected_component() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.drop_disconnected_component"]], "filling_unknown_labels() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.filling_unknown_labels"]], "locating_unknowns() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.locating_unknowns"]], "save_mgh_image() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.save_mgh_image"]], "sphere() (in module cerebnet.datasets.wm_merge_clean)": [[17, "CerebNet.datasets.wm_merge_clean.sphere"]], "cerebnet.inference": [[18, "module-CerebNet.inference"]], "inference (class in cerebnet.inference)": [[18, "CerebNet.inference.Inference"]], "cerebnet.models.networks": [[19, "module-CerebNet.models.networks"]], "fastsurfercnn (class in cerebnet.models.networks)": [[19, "CerebNet.models.networks.FastSurferCNN"]], "build_model() (in module cerebnet.models.networks)": [[19, "CerebNet.models.networks.build_model"]], "forward() (cerebnet.models.networks.fastsurfercnn method)": [[19, "CerebNet.models.networks.FastSurferCNN.forward"]], "cerebnet.models.sub_module": [[20, "module-CerebNet.models.sub_module"]], "classifierblock (class in cerebnet.models.sub_module)": [[20, "CerebNet.models.sub_module.ClassifierBlock"]], "competitivedecoderblock (class in cerebnet.models.sub_module)": [[20, "CerebNet.models.sub_module.CompetitiveDecoderBlock"]], "competitivedenseblock (class in cerebnet.models.sub_module)": [[20, "CerebNet.models.sub_module.CompetitiveDenseBlock"]], "competitivedenseblockinput (class in cerebnet.models.sub_module)": [[20, "CerebNet.models.sub_module.CompetitiveDenseBlockInput"]], "competitiveencoderblock (class in cerebnet.models.sub_module)": [[20, "CerebNet.models.sub_module.CompetitiveEncoderBlock"]], "competitiveencoderblockinput (class in cerebnet.models.sub_module)": [[20, "CerebNet.models.sub_module.CompetitiveEncoderBlockInput"]], "forward() (cerebnet.models.sub_module.classifierblock method)": [[20, "CerebNet.models.sub_module.ClassifierBlock.forward"]], "forward() (cerebnet.models.sub_module.competitivedecoderblock method)": [[20, "CerebNet.models.sub_module.CompetitiveDecoderBlock.forward"]], "forward() (cerebnet.models.sub_module.competitivedenseblock method)": [[20, "CerebNet.models.sub_module.CompetitiveDenseBlock.forward"]], "forward() (cerebnet.models.sub_module.competitivedenseblockinput method)": [[20, "CerebNet.models.sub_module.CompetitiveDenseBlockInput.forward"]], "forward() (cerebnet.models.sub_module.competitiveencoderblock method)": [[20, "CerebNet.models.sub_module.CompetitiveEncoderBlock.forward"]], "forward() (cerebnet.models.sub_module.competitiveencoderblockinput method)": [[20, "CerebNet.models.sub_module.CompetitiveEncoderBlockInput.forward"]], "cerebnet.run_prediction": [[21, "module-CerebNet.run_prediction"]], "main() (in module cerebnet.run_prediction)": [[21, "CerebNet.run_prediction.main"]], "setup_options() (in module cerebnet.run_prediction)": [[21, "CerebNet.run_prediction.setup_options"]], "cerebnet.utils.checkpoint": [[22, "module-CerebNet.utils.checkpoint"]], "is_checkpoint_epoch() (in module cerebnet.utils.checkpoint)": [[22, "CerebNet.utils.checkpoint.is_checkpoint_epoch"]], "cerebnet.utils.load_config": [[23, "module-CerebNet.utils.load_config"]], "get_config() (in module cerebnet.utils.load_config)": [[23, "CerebNet.utils.load_config.get_config"]], "setup_options() (in module cerebnet.utils.load_config)": [[23, "CerebNet.utils.load_config.setup_options"]], "cerebnet.utils.lr_scheduler": [[24, "module-CerebNet.utils.lr_scheduler"]], "cosineannealingwarmrestartsdecay (class in cerebnet.utils.lr_scheduler)": [[24, "CerebNet.utils.lr_scheduler.CosineAnnealingWarmRestartsDecay"]], "cosinelr (class in cerebnet.utils.lr_scheduler)": [[24, "CerebNet.utils.lr_scheduler.CosineLR"]], "reducelronplateauwithrestarts (class in cerebnet.utils.lr_scheduler)": [[24, "CerebNet.utils.lr_scheduler.ReduceLROnPlateauWithRestarts"]], "warmupcosinelr (class in cerebnet.utils.lr_scheduler)": [[24, "CerebNet.utils.lr_scheduler.WarmupCosineLR"]], "decay_base_lr() (cerebnet.utils.lr_scheduler.cosineannealingwarmrestartsdecay method)": [[24, "CerebNet.utils.lr_scheduler.CosineAnnealingWarmRestartsDecay.decay_base_lr"]], "get_epoch_lr() (cerebnet.utils.lr_scheduler.cosinelr method)": [[24, "CerebNet.utils.lr_scheduler.CosineLR.get_epoch_lr"]], "get_lr() (cerebnet.utils.lr_scheduler.warmupcosinelr method)": [[24, "CerebNet.utils.lr_scheduler.WarmupCosineLR.get_lr"]], "get_lr_scheduler() (in module cerebnet.utils.lr_scheduler)": [[24, "CerebNet.utils.lr_scheduler.get_lr_scheduler"]], "lr_func_cosine() (cerebnet.utils.lr_scheduler.cosinelr method)": [[24, "CerebNet.utils.lr_scheduler.CosineLR.lr_func_cosine"]], "set_lr() (cerebnet.utils.lr_scheduler.cosinelr method)": [[24, "CerebNet.utils.lr_scheduler.CosineLR.set_lr"]], "step() (cerebnet.utils.lr_scheduler.reducelronplateauwithrestarts method)": [[24, "CerebNet.utils.lr_scheduler.ReduceLROnPlateauWithRestarts.step"]], "cerebnet.utils.meters": [[25, "module-CerebNet.utils.meters"]], "meter (class in cerebnet.utils.meters)": [[25, "CerebNet.utils.meters.Meter"]], "testmeter (class in cerebnet.utils.meters)": [[25, "CerebNet.utils.meters.TestMeter"]], "log_epoch() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.log_epoch"]], "log_iter() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.log_iter"]], "log_lr() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.log_lr"]], "metrics_per_class() (cerebnet.utils.meters.testmeter method)": [[25, "CerebNet.utils.meters.TestMeter.metrics_per_class"]], "prediction_visualize() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.prediction_visualize"]], "reset() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.reset"]], "update_stats() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.update_stats"]], "write_summary() (cerebnet.utils.meters.meter method)": [[25, "CerebNet.utils.meters.Meter.write_summary"]], "cerebnet.utils.metrics": [[26, "module-CerebNet.utils.metrics"]], "dicescore (class in cerebnet.utils.metrics)": [[26, "CerebNet.utils.metrics.DiceScore"]], "compute() (cerebnet.utils.metrics.dicescore method)": [[26, "CerebNet.utils.metrics.DiceScore.compute"]], "dice_score() (in module cerebnet.utils.metrics)": [[26, "CerebNet.utils.metrics.dice_score"]], "hd() (in module cerebnet.utils.metrics)": [[26, "CerebNet.utils.metrics.hd"]], "hd95() (in module cerebnet.utils.metrics)": [[26, "CerebNet.utils.metrics.hd95"]], "reset() (cerebnet.utils.metrics.dicescore method)": [[26, "CerebNet.utils.metrics.DiceScore.reset"]], "update() (cerebnet.utils.metrics.dicescore method)": [[26, "CerebNet.utils.metrics.DiceScore.update"]], "volume_similarity() (in module cerebnet.utils.metrics)": [[26, "CerebNet.utils.metrics.volume_similarity"]], "cerebnet.utils.misc": [[27, "module-CerebNet.utils.misc"]], "load_classwise_weights() (in module cerebnet.utils.misc)": [[27, "CerebNet.utils.misc.load_classwise_weights"]], "plot_predictions() (in module cerebnet.utils.misc)": [[27, "CerebNet.utils.misc.plot_predictions"]], "set_summary_path() (in module cerebnet.utils.misc)": [[27, "CerebNet.utils.misc.set_summary_path"]], "update_results_dir() (in module cerebnet.utils.misc)": [[27, "CerebNet.utils.misc.update_results_dir"]], "update_split_path() (in module cerebnet.utils.misc)": [[27, "CerebNet.utils.misc.update_split_path"]], "visualize_batch() (in module cerebnet.utils.misc)": [[27, "CerebNet.utils.misc.visualize_batch"]], "addgaussiannoise (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.AddGaussianNoise"]], "augmentationpadimage (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.AugmentationPadImage"]], "augmentationrandomcrop (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.AugmentationRandomCrop"]], "fastsurfercnn.data_loader.augmentation": [[28, "module-FastSurferCNN.data_loader.augmentation"]], "totensor (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.ToTensor"]], "totensortest (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.ToTensorTest"]], "zeropad2d (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.ZeroPad2D"]], "zeropad2dtest (class in fastsurfercnn.data_loader.augmentation)": [[28, "FastSurferCNN.data_loader.augmentation.ZeroPad2DTest"]], "fastsurfercnn.data_loader.conform": [[29, "module-FastSurferCNN.data_loader.conform"]], "check_affine_in_nifti() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.check_affine_in_nifti"]], "conform() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.conform"]], "find_img_size_by_fov() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.find_img_size_by_fov"]], "find_min_size() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.find_min_size"]], "get_conformed_vox_img_size() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.get_conformed_vox_img_size"]], "getscale() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.getscale"]], "is_conform() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.is_conform"]], "map_image() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.map_image"]], "options_parse() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.options_parse"]], "rescale() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.rescale"]], "scalecrop() (in module fastsurfercnn.data_loader.conform)": [[29, "FastSurferCNN.data_loader.conform.scalecrop"]], "fastsurfercnn.data_loader.data_utils": [[30, "module-FastSurferCNN.data_loader.data_utils"]], "bbox_3d() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.bbox_3d"]], "clean_cortex_labels() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.clean_cortex_labels"]], "cortex_border_mask() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.cortex_border_mask"]], "create_weight_mask() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.create_weight_mask"]], "deep_sulci_and_wm_strand_mask() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.deep_sulci_and_wm_strand_mask"]], "fill_unknown_labels_per_hemi() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.fill_unknown_labels_per_hemi"]], "filter_blank_slices_thick() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.filter_blank_slices_thick"]], "fuse_cortex_labels() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.fuse_cortex_labels"]], "get_labels_from_lut() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.get_labels_from_lut"]], "get_largest_cc() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.get_largest_cc"]], "get_thick_slices() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.get_thick_slices"]], "infer_mapping_from_lut() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.infer_mapping_from_lut"]], "load_and_conform_image() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.load_and_conform_image"]], "load_image() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.load_image"]], "load_maybe_conform() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.load_maybe_conform"]], "map_aparc_aseg2label() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.map_aparc_aseg2label"]], "map_label2aparc_aseg() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.map_label2aparc_aseg"]], "map_prediction_sagittal2full() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.map_prediction_sagittal2full"]], "read_classes_from_lut() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.read_classes_from_lut"]], "sagittal_coronal_remap_lookup() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.sagittal_coronal_remap_lookup"]], "save_image() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.save_image"]], "split_cortex_labels() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.split_cortex_labels"]], "transform_axial() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.transform_axial"]], "transform_sagittal() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.transform_sagittal"]], "unify_lateralized_labels() (in module fastsurfercnn.data_loader.data_utils)": [[30, "FastSurferCNN.data_loader.data_utils.unify_lateralized_labels"]], "fastsurfercnn.data_loader.dataset": [[31, "module-FastSurferCNN.data_loader.dataset"]], "multiscaledataset (class in fastsurfercnn.data_loader.dataset)": [[31, "FastSurferCNN.data_loader.dataset.MultiScaleDataset"]], "multiscaledatasetval (class in fastsurfercnn.data_loader.dataset)": [[31, "FastSurferCNN.data_loader.dataset.MultiScaleDatasetVal"]], "multiscaleorigdatathickslices (class in fastsurfercnn.data_loader.dataset)": [[31, "FastSurferCNN.data_loader.dataset.MultiScaleOrigDataThickSlices"]], "get_subject_names() (fastsurfercnn.data_loader.dataset.multiscaledataset method)": [[31, "FastSurferCNN.data_loader.dataset.MultiScaleDataset.get_subject_names"]], "get_subject_names() (fastsurfercnn.data_loader.dataset.multiscaledatasetval method)": [[31, "FastSurferCNN.data_loader.dataset.MultiScaleDatasetVal.get_subject_names"]], "unify_imgs() (fastsurfercnn.data_loader.dataset.multiscaledataset method)": [[31, "FastSurferCNN.data_loader.dataset.MultiScaleDataset.unify_imgs"]], "fastsurfercnn.data_loader.loader": [[32, "module-FastSurferCNN.data_loader.loader"]], "get_dataloader() (in module fastsurfercnn.data_loader.loader)": [[32, "FastSurferCNN.data_loader.loader.get_dataloader"]], "fastsurfercnn.download_checkpoints": [[33, "module-FastSurferCNN.download_checkpoints"]], "fastsurfercnn.generate_hdf5": [[34, "module-FastSurferCNN.generate_hdf5"]], "h5pydataset (class in fastsurfercnn.generate_hdf5)": [[34, "FastSurferCNN.generate_hdf5.H5pyDataset"]], "create_hdf5_dataset() (fastsurfercnn.generate_hdf5.h5pydataset method)": [[34, "FastSurferCNN.generate_hdf5.H5pyDataset.create_hdf5_dataset"]], "transform() (fastsurfercnn.generate_hdf5.h5pydataset method)": [[34, "FastSurferCNN.generate_hdf5.H5pyDataset.transform"]], "fastsurfercnn.inference": [[35, "module-FastSurferCNN.inference"]], "inference (class in fastsurfercnn.inference)": [[35, "FastSurferCNN.inference.Inference"]], "eval() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.eval"]], "get_cfg() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_cfg"]], "get_device() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_device"]], "get_max_size() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_max_size"]], "get_model_height() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_model_height"]], "get_model_width() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_model_width"]], "get_modelname() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_modelname"]], "get_num_classes() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_num_classes"]], "get_plane() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.get_plane"]], "load_checkpoint() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.load_checkpoint"]], "run() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.run"]], "set_cfg() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.set_cfg"]], "setup_model() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.setup_model"]], "to() (fastsurfercnn.inference.inference method)": [[35, "FastSurferCNN.inference.Inference.to"]], "fastsurfercnn.models.interpolation_layer": [[36, "module-FastSurferCNN.models.interpolation_layer"]], "zoom2d (class in fastsurfercnn.models.interpolation_layer)": [[36, "FastSurferCNN.models.interpolation_layer.Zoom2d"]], "zoom3d (class in fastsurfercnn.models.interpolation_layer)": [[36, "FastSurferCNN.models.interpolation_layer.Zoom3d"]], "crop_position (fastsurfercnn.models.interpolation_layer.zoom2d property)": [[36, "FastSurferCNN.models.interpolation_layer.Zoom2d.crop_position"]], "crop_position (fastsurfercnn.models.interpolation_layer.zoom3d property)": [[36, "FastSurferCNN.models.interpolation_layer.Zoom3d.crop_position"]], "combinedloss (class in fastsurfercnn.models.losses)": [[37, "FastSurferCNN.models.losses.CombinedLoss"]], "crossentropy2d (class in fastsurfercnn.models.losses)": [[37, "FastSurferCNN.models.losses.CrossEntropy2D"]], "diceloss (class in fastsurfercnn.models.losses)": [[37, "FastSurferCNN.models.losses.DiceLoss"]], "fastsurfercnn.models.losses": [[37, "module-FastSurferCNN.models.losses"]], "forward() (fastsurfercnn.models.losses.combinedloss method)": [[37, "FastSurferCNN.models.losses.CombinedLoss.forward"]], "forward() (fastsurfercnn.models.losses.crossentropy2d method)": [[37, "FastSurferCNN.models.losses.CrossEntropy2D.forward"]], "forward() (fastsurfercnn.models.losses.diceloss method)": [[37, "FastSurferCNN.models.losses.DiceLoss.forward"]], "get_loss_func() (in module fastsurfercnn.models.losses)": [[37, "FastSurferCNN.models.losses.get_loss_func"]], "fastsurfercnn (class in fastsurfercnn.models.networks)": [[38, "FastSurferCNN.models.networks.FastSurferCNN"]], "fastsurfercnn.models.networks": [[38, "module-FastSurferCNN.models.networks"]], "fastsurfercnnbase (class in fastsurfercnn.models.networks)": [[38, "FastSurferCNN.models.networks.FastSurferCNNBase"]], "fastsurfervinn (class in fastsurfercnn.models.networks)": [[38, "FastSurferCNN.models.networks.FastSurferVINN"]], "build_model() (in module fastsurfercnn.models.networks)": [[38, "FastSurferCNN.models.networks.build_model"]], "forward() (fastsurfercnn.models.networks.fastsurfercnn method)": [[38, "FastSurferCNN.models.networks.FastSurferCNN.forward"]], "forward() (fastsurfercnn.models.networks.fastsurfercnnbase method)": [[38, "FastSurferCNN.models.networks.FastSurferCNNBase.forward"]], "forward() (fastsurfercnn.models.networks.fastsurfervinn method)": [[38, "FastSurferCNN.models.networks.FastSurferVINN.forward"]], "classifierblock (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.ClassifierBlock"]], "competitivedecoderblock (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.CompetitiveDecoderBlock"]], "competitivedenseblock (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.CompetitiveDenseBlock"]], "competitivedenseblockinput (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.CompetitiveDenseBlockInput"]], "competitiveencoderblock (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.CompetitiveEncoderBlock"]], "competitiveencoderblockinput (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.CompetitiveEncoderBlockInput"]], "fastsurfercnn.models.sub_module": [[39, "module-FastSurferCNN.models.sub_module"]], "gaussiannoise (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.GaussianNoise"]], "inputdenseblock (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.InputDenseBlock"]], "outputdenseblock (class in fastsurfercnn.models.sub_module)": [[39, "FastSurferCNN.models.sub_module.OutputDenseBlock"]], "forward() (fastsurfercnn.models.sub_module.classifierblock method)": [[39, "FastSurferCNN.models.sub_module.ClassifierBlock.forward"]], "forward() (fastsurfercnn.models.sub_module.competitivedecoderblock method)": [[39, "FastSurferCNN.models.sub_module.CompetitiveDecoderBlock.forward"]], "forward() (fastsurfercnn.models.sub_module.competitivedenseblock method)": [[39, "FastSurferCNN.models.sub_module.CompetitiveDenseBlock.forward"]], "forward() (fastsurfercnn.models.sub_module.competitivedenseblockinput method)": [[39, "FastSurferCNN.models.sub_module.CompetitiveDenseBlockInput.forward"]], "forward() (fastsurfercnn.models.sub_module.competitiveencoderblock method)": [[39, "FastSurferCNN.models.sub_module.CompetitiveEncoderBlock.forward"]], "forward() (fastsurfercnn.models.sub_module.competitiveencoderblockinput method)": [[39, "FastSurferCNN.models.sub_module.CompetitiveEncoderBlockInput.forward"]], "forward() (fastsurfercnn.models.sub_module.gaussiannoise method)": [[39, "FastSurferCNN.models.sub_module.GaussianNoise.forward"]], "forward() (fastsurfercnn.models.sub_module.inputdenseblock method)": [[39, "FastSurferCNN.models.sub_module.InputDenseBlock.forward"]], "forward() (fastsurfercnn.models.sub_module.outputdenseblock method)": [[39, "FastSurferCNN.models.sub_module.OutputDenseBlock.forward"]], "fastsurfercnn.quick_qc": [[40, "module-FastSurferCNN.quick_qc"]], "check_volume() (in module fastsurfercnn.quick_qc)": [[40, "FastSurferCNN.quick_qc.check_volume"]], "get_ventricle_bg_intersection_volume() (in module fastsurfercnn.quick_qc)": [[40, "FastSurferCNN.quick_qc.get_ventricle_bg_intersection_volume"]], "options_parse() (in module fastsurfercnn.quick_qc)": [[40, "FastSurferCNN.quick_qc.options_parse"]], "fastsurfercnn.reduce_to_aseg": [[41, "module-FastSurferCNN.reduce_to_aseg"]], "create_mask() (in module fastsurfercnn.reduce_to_aseg)": [[41, "FastSurferCNN.reduce_to_aseg.create_mask"]], "flip_wm_islands() (in module fastsurfercnn.reduce_to_aseg)": [[41, "FastSurferCNN.reduce_to_aseg.flip_wm_islands"]], "options_parse() (in module fastsurfercnn.reduce_to_aseg)": [[41, "FastSurferCNN.reduce_to_aseg.options_parse"]], "reduce_to_aseg() (in module fastsurfercnn.reduce_to_aseg)": [[41, "FastSurferCNN.reduce_to_aseg.reduce_to_aseg"]], "fastsurfercnn.run_prediction": [[42, "module-FastSurferCNN.run_prediction"]], "runmodelondata (class in fastsurfercnn.run_prediction)": [[42, "FastSurferCNN.run_prediction.RunModelOnData"]], "args2cfg() (in module fastsurfercnn.run_prediction)": [[42, "FastSurferCNN.run_prediction.args2cfg"]], "async_save_img() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.async_save_img"]], "conform_and_save_orig() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.conform_and_save_orig"]], "get_num_classes() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.get_num_classes"]], "get_prediction() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.get_prediction"]], "pipeline_conform_and_save_orig() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.pipeline_conform_and_save_orig"]], "pool (fastsurfercnn.run_prediction.runmodelondata property)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.pool"]], "save_img() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.save_img"]], "set_model() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.set_model"]], "set_up_cfgs() (in module fastsurfercnn.run_prediction)": [[42, "FastSurferCNN.run_prediction.set_up_cfgs"]], "set_up_model_params() (fastsurfercnn.run_prediction.runmodelondata method)": [[42, "FastSurferCNN.run_prediction.RunModelOnData.set_up_model_params"]], "fastsurfercnn.segstats": [[43, "module-FastSurferCNN.segstats"]], "helpformatter (class in fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.HelpFormatter"]], "borders() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.borders"]], "crop_patch_to_mask() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.crop_patch_to_mask"]], "global_stats() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.global_stats"]], "grow_patch() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.grow_patch"]], "loadfile_full() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.loadfile_full"]], "main() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.main"]], "make_arguments() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.make_arguments"]], "patch_filter() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.patch_filter"]], "patch_neighbors() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.patch_neighbors"]], "pv_calc() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.pv_calc"]], "pv_calc_patch() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.pv_calc_patch"]], "read_classes_from_lut() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.read_classes_from_lut"]], "seg_borders() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.seg_borders"]], "uniform_filter() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.uniform_filter"]], "unsqueeze() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.unsqueeze"]], "write_statsfile() (in module fastsurfercnn.segstats)": [[43, "FastSurferCNN.segstats.write_statsfile"]], "fastsurfercnn.utils.arg_types": [[44, "module-FastSurferCNN.utils.arg_types"]], "float_gt_zero_and_le_one() (in module fastsurfercnn.utils.arg_types)": [[44, "FastSurferCNN.utils.arg_types.float_gt_zero_and_le_one"]], "int_ge_zero() (in module fastsurfercnn.utils.arg_types)": [[44, "FastSurferCNN.utils.arg_types.int_ge_zero"]], "int_gt_zero() (in module fastsurfercnn.utils.arg_types)": [[44, "FastSurferCNN.utils.arg_types.int_gt_zero"]], "target_dtype() (in module fastsurfercnn.utils.arg_types)": [[44, "FastSurferCNN.utils.arg_types.target_dtype"]], "unquote_str() (in module fastsurfercnn.utils.arg_types)": [[44, "FastSurferCNN.utils.arg_types.unquote_str"]], "vox_size() (in module fastsurfercnn.utils.arg_types)": [[44, "FastSurferCNN.utils.arg_types.vox_size"]], "checkpointconfigdict (class in fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.CheckpointConfigDict"]], "fastsurfercnn.utils.checkpoint": [[45, "module-FastSurferCNN.utils.checkpoint"]], "check_and_download_ckpts() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.check_and_download_ckpts"]], "create_checkpoint_dir() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.create_checkpoint_dir"]], "download_checkpoint() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.download_checkpoint"]], "get_checkpoint() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.get_checkpoint"]], "get_checkpoint_path() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.get_checkpoint_path"]], "get_checkpoints() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.get_checkpoints"]], "load_checkpoint_config() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.load_checkpoint_config"]], "load_checkpoint_config_defaults() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.load_checkpoint_config_defaults"]], "load_from_checkpoint() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.load_from_checkpoint"]], "remove_ckpt() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.remove_ckpt"]], "save_checkpoint() (in module fastsurfercnn.utils.checkpoint)": [[45, "FastSurferCNN.utils.checkpoint.save_checkpoint"]], "fastsurfercnn.utils.common": [[46, "module-FastSurferCNN.utils.common"]], "serialexecutor (class in fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.SerialExecutor"]], "subjectdirectory (class in fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.SubjectDirectory"]], "subjectlist (class in fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.SubjectList"]], "are_all_subject_files() (fastsurfercnn.utils.common.subjectlist method)": [[46, "FastSurferCNN.utils.common.SubjectList.are_all_subject_files"]], "asegdkt_segfile (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.asegdkt_segfile"]], "assert_no_root() (in module fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.assert_no_root"]], "can_resolve_attribute() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.can_resolve_attribute"]], "can_resolve_filename() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.can_resolve_filename"]], "conf_name (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.conf_name"]], "copy_orig_name (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.copy_orig_name"]], "fileexists_by_attribute() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.fileexists_by_attribute"]], "fileexists_in_subject_folder() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.fileexists_in_subject_folder"]], "filename_by_attribute() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.filename_by_attribute"]], "filename_in_subject_folder() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.filename_in_subject_folder"]], "find_device() (in module fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.find_device"]], "flags (fastsurfercnn.utils.common.subjectlist property)": [[46, "FastSurferCNN.utils.common.SubjectList.flags"]], "get_attribute() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.get_attribute"]], "get_common_suffix() (fastsurfercnn.utils.common.subjectlist method)": [[46, "FastSurferCNN.utils.common.SubjectList.get_common_suffix"]], "handle_cuda_memory_exception() (in module fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.handle_cuda_memory_exception"]], "has_attribute() (fastsurfercnn.utils.common.subjectdirectory method)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.has_attribute"]], "id (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.id"]], "iterate() (in module fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.iterate"]], "main_segfile (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.main_segfile"]], "make_subjects_dir() (fastsurfercnn.utils.common.subjectlist method)": [[46, "FastSurferCNN.utils.common.SubjectList.make_subjects_dir"]], "map() (fastsurfercnn.utils.common.serialexecutor method)": [[46, "FastSurferCNN.utils.common.SerialExecutor.map"]], "orig_name (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.orig_name"]], "pipeline() (in module fastsurfercnn.utils.common)": [[46, "FastSurferCNN.utils.common.pipeline"]], "segfile (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.segfile"]], "subject_dir (fastsurfercnn.utils.common.subjectdirectory property)": [[46, "FastSurferCNN.utils.common.SubjectDirectory.subject_dir"]], "submit() (fastsurfercnn.utils.common.serialexecutor method)": [[46, "FastSurferCNN.utils.common.SerialExecutor.submit"]], "fastsurfercnn.utils.load_config": [[47, "module-FastSurferCNN.utils.load_config"]], "get_config() (in module fastsurfercnn.utils.load_config)": [[47, "FastSurferCNN.utils.load_config.get_config"]], "load_config() (in module fastsurfercnn.utils.load_config)": [[47, "FastSurferCNN.utils.load_config.load_config"]], "fastsurfercnn.utils.logging": [[48, "module-FastSurferCNN.utils.logging"]], "setup_logging() (in module fastsurfercnn.utils.logging)": [[48, "FastSurferCNN.utils.logging.setup_logging"]], "fastsurfercnn.utils.lr_scheduler": [[49, "module-FastSurferCNN.utils.lr_scheduler"]], "get_lr_scheduler() (in module fastsurfercnn.utils.lr_scheduler)": [[49, "FastSurferCNN.utils.lr_scheduler.get_lr_scheduler"]], "colorlookuptable (class in fastsurfercnn.utils.mapper)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable"]], "fastsurfercnn.utils.mapper": [[50, "module-FastSurferCNN.utils.mapper"]], "jsoncolorlookuptable (class in fastsurfercnn.utils.mapper)": [[50, "FastSurferCNN.utils.mapper.JsonColorLookupTable"]], "mapper (class in fastsurfercnn.utils.mapper)": [[50, "FastSurferCNN.utils.mapper.Mapper"]], "tsvlookuptable (class in fastsurfercnn.utils.mapper)": [[50, "FastSurferCNN.utils.mapper.TSVLookupTable"]], "chain() (fastsurfercnn.utils.mapper.mapper method)": [[50, "FastSurferCNN.utils.mapper.Mapper.chain"]], "classes (fastsurfercnn.utils.mapper.colorlookuptable property)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.classes"]], "color_palette (fastsurfercnn.utils.mapper.colorlookuptable property)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.color_palette"]], "colormap() (fastsurfercnn.utils.mapper.colorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.colormap"]], "dataframe() (fastsurfercnn.utils.mapper.jsoncolorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.JsonColorLookupTable.dataframe"]], "dataframe() (fastsurfercnn.utils.mapper.tsvlookuptable method)": [[50, "FastSurferCNN.utils.mapper.TSVLookupTable.dataframe"]], "get_color_by_index() (fastsurfercnn.utils.mapper.colorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.get_color_by_index"]], "getitem_by_index() (fastsurfercnn.utils.mapper.colorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.getitem_by_index"]], "getitem_by_index() (fastsurfercnn.utils.mapper.tsvlookuptable method)": [[50, "FastSurferCNN.utils.mapper.TSVLookupTable.getitem_by_index"]], "is_bijective() (fastsurfercnn.utils.mapper.mapper method)": [[50, "FastSurferCNN.utils.mapper.Mapper.is_bijective"]], "is_int() (in module fastsurfercnn.utils.mapper)": [[50, "FastSurferCNN.utils.mapper.is_int"]], "labelname2id() (fastsurfercnn.utils.mapper.colorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.labelname2id"]], "labelname2id() (fastsurfercnn.utils.mapper.jsoncolorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.JsonColorLookupTable.labelname2id"]], "labelname2id() (fastsurfercnn.utils.mapper.tsvlookuptable method)": [[50, "FastSurferCNN.utils.mapper.TSVLookupTable.labelname2id"]], "labelname2index() (fastsurfercnn.utils.mapper.colorlookuptable method)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.labelname2index"]], "make_classmapper() (fastsurfercnn.utils.mapper.mapper class method)": [[50, "FastSurferCNN.utils.mapper.Mapper.make_classmapper"]], "map() (fastsurfercnn.utils.mapper.mapper method)": [[50, "FastSurferCNN.utils.mapper.Mapper.map"]], "max_label (fastsurfercnn.utils.mapper.mapper property)": [[50, "FastSurferCNN.utils.mapper.Mapper.max_label"]], "name (fastsurfercnn.utils.mapper.colorlookuptable property)": [[50, "FastSurferCNN.utils.mapper.ColorLookupTable.name"]], "name (fastsurfercnn.utils.mapper.mapper property)": [[50, "FastSurferCNN.utils.mapper.Mapper.name"]], "reversed_dict() (fastsurfercnn.utils.mapper.mapper method)": [[50, "FastSurferCNN.utils.mapper.Mapper.reversed_dict"]], "source_space (fastsurfercnn.utils.mapper.mapper property)": [[50, "FastSurferCNN.utils.mapper.Mapper.source_space"]], "target_space (fastsurfercnn.utils.mapper.mapper property)": [[50, "FastSurferCNN.utils.mapper.Mapper.target_space"]], "to_same_type() (in module fastsurfercnn.utils.mapper)": [[50, "FastSurferCNN.utils.mapper.to_same_type"]], "update() (fastsurfercnn.utils.mapper.mapper method)": [[50, "FastSurferCNN.utils.mapper.Mapper.update"]], "fastsurfercnn.utils.meters": [[51, "module-FastSurferCNN.utils.meters"]], "meter (class in fastsurfercnn.utils.meters)": [[51, "FastSurferCNN.utils.meters.Meter"]], "disable_confusion_mat() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.disable_confusion_mat"]], "enable_confusion_mat() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.enable_confusion_mat"]], "log_epoch() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.log_epoch"]], "log_iter() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.log_iter"]], "reset() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.reset"]], "update_stats() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.update_stats"]], "write_summary() (fastsurfercnn.utils.meters.meter method)": [[51, "FastSurferCNN.utils.meters.Meter.write_summary"]], "dicescore (class in fastsurfercnn.utils.metrics)": [[52, "FastSurferCNN.utils.metrics.DiceScore"]], "fastsurfercnn.utils.metrics": [[52, "module-FastSurferCNN.utils.metrics"]], "comput_dice_cnf() (fastsurfercnn.utils.metrics.dicescore method)": [[52, "FastSurferCNN.utils.metrics.DiceScore.comput_dice_cnf"]], "compute_dsc() (fastsurfercnn.utils.metrics.dicescore method)": [[52, "FastSurferCNN.utils.metrics.DiceScore.compute_dsc"]], "dice_score() (in module fastsurfercnn.utils.metrics)": [[52, "FastSurferCNN.utils.metrics.dice_score"]], "iou_score() (in module fastsurfercnn.utils.metrics)": [[52, "FastSurferCNN.utils.metrics.iou_score"]], "precision_recall() (in module fastsurfercnn.utils.metrics)": [[52, "FastSurferCNN.utils.metrics.precision_recall"]], "reset() (fastsurfercnn.utils.metrics.dicescore method)": [[52, "FastSurferCNN.utils.metrics.DiceScore.reset"]], "update() (fastsurfercnn.utils.metrics.dicescore method)": [[52, "FastSurferCNN.utils.metrics.DiceScore.update"]], "fastsurfercnn.utils.misc": [[53, "module-FastSurferCNN.utils.misc"]], "check_path() (in module fastsurfercnn.utils.misc)": [[53, "FastSurferCNN.utils.misc.check_path"]], "find_latest_experiment() (in module fastsurfercnn.utils.misc)": [[53, "FastSurferCNN.utils.misc.find_latest_experiment"]], "plot_confusion_matrix() (in module fastsurfercnn.utils.misc)": [[53, "FastSurferCNN.utils.misc.plot_confusion_matrix"]], "plot_predictions() (in module fastsurfercnn.utils.misc)": [[53, "FastSurferCNN.utils.misc.plot_predictions"]], "update_num_steps() (in module fastsurfercnn.utils.misc)": [[53, "FastSurferCNN.utils.misc.update_num_steps"]], "canaddarguments (class in fastsurfercnn.utils.parser_defaults)": [[54, "FastSurferCNN.utils.parser_defaults.CanAddArguments"]], "fastsurfercnn.utils.parser_defaults": [[54, "module-FastSurferCNN.utils.parser_defaults"]], "add_argument() (fastsurfercnn.utils.parser_defaults.canaddarguments method)": [[54, "FastSurferCNN.utils.parser_defaults.CanAddArguments.add_argument"]], "add_arguments() (in module fastsurfercnn.utils.parser_defaults)": [[54, "FastSurferCNN.utils.parser_defaults.add_arguments"]], "add_plane_flags() (in module fastsurfercnn.utils.parser_defaults)": [[54, "FastSurferCNN.utils.parser_defaults.add_plane_flags"]], "fastsurfercnn.utils.run_tools": [[55, "module-FastSurferCNN.utils.run_tools"]], "messagebuffer (class in fastsurfercnn.utils.run_tools)": [[55, "FastSurferCNN.utils.run_tools.MessageBuffer"]], "popen (class in fastsurfercnn.utils.run_tools)": [[55, "FastSurferCNN.utils.run_tools.Popen"]], "pypopen (class in fastsurfercnn.utils.run_tools)": [[55, "FastSurferCNN.utils.run_tools.PyPopen"]], "as_future() (fastsurfercnn.utils.run_tools.popen method)": [[55, "FastSurferCNN.utils.run_tools.Popen.as_future"]], "finish() (fastsurfercnn.utils.run_tools.popen method)": [[55, "FastSurferCNN.utils.run_tools.Popen.finish"]], "fastsurfercnn.utils.threads": [[56, "module-FastSurferCNN.utils.threads"]], "get_num_threads() (in module fastsurfercnn.utils.threads)": [[56, "FastSurferCNN.utils.threads.get_num_threads"]], "fastsurfercnn.version": [[57, "module-FastSurferCNN.version"]], "versiondict (class in fastsurfercnn.version)": [[57, "FastSurferCNN.version.VersionDict"]], "filter_git_status() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.filter_git_status"]], "get_default_version_info() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.get_default_version_info"]], "has_git() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.has_git"]], "main() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.main"]], "make_parser() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.make_parser"]], "parse_build_file() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.parse_build_file"]], "print_build_file() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.print_build_file"]], "read_and_close_version() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.read_and_close_version"]], "read_version_from_project_file() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.read_version_from_project_file"]], "section() (in module fastsurfercnn.version)": [[57, "FastSurferCNN.version.section"]], "get_brain_centroid() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.get_brain_centroid"]], "get_image_mean() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.get_image_mean"]], "get_tal_origin_voxel() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.get_tal_origin_voxel"]], "itk_n4_bfcorrection() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.itk_n4_bfcorrection"]], "normalize_img() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.normalize_img"]], "normalize_wm_aseg() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.normalize_wm_aseg"]], "normalize_wm_mask_ball() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.normalize_wm_mask_ball"]], "options_parse() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.options_parse"]], "read_talairach_xfm() (in module recon_surf.n4_bias_correct)": [[58, "recon_surf.N4_bias_correct.read_talairach_xfm"]], "recon_surf.n4_bias_correct": [[58, "module-recon_surf.N4_bias_correct"]], "angles2rmat() (in module recon_surf.align_points)": [[59, "recon_surf.align_points.angles2rmat"]], "find_affine() (in module recon_surf.align_points)": [[59, "recon_surf.align_points.find_affine"]], "find_rigid() (in module recon_surf.align_points)": [[59, "recon_surf.align_points.find_rigid"]], "find_rotation() (in module recon_surf.align_points)": [[59, "recon_surf.align_points.find_rotation"]], "recon_surf.align_points": [[59, "module-recon_surf.align_points"]], "rmat2angles() (in module recon_surf.align_points)": [[59, "recon_surf.align_points.rmat2angles"]], "align_flipped() (in module recon_surf.align_seg)": [[60, "recon_surf.align_seg.align_flipped"]], "align_seg_centroids() (in module recon_surf.align_seg)": [[60, "recon_surf.align_seg.align_seg_centroids"]], "get_seg_centroids() (in module recon_surf.align_seg)": [[60, "recon_surf.align_seg.get_seg_centroids"]], "get_vox2ras() (in module recon_surf.align_seg)": [[60, "recon_surf.align_seg.get_vox2ras"]], "options_parse() (in module recon_surf.align_seg)": [[60, "recon_surf.align_seg.options_parse"]], "recon_surf.align_seg": [[60, "module-recon_surf.align_seg"]], "build_annot() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.build_annot"]], "create_annotation() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.create_annotation"]], "map_multiple_labels() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.map_multiple_labels"]], "options_parse() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.options_parse"]], "read_colortable() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.read_colortable"]], "read_multiple_labels() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.read_multiple_labels"]], "recon_surf.create_annotation": [[61, "module-recon_surf.create_annotation"]], "write_annot() (in module recon_surf.create_annotation)": [[61, "recon_surf.create_annotation.write_annot"]], "options_parse() (in module recon_surf.fs_balabels)": [[62, "recon_surf.fs_balabels.options_parse"]], "read_colortables() (in module recon_surf.fs_balabels)": [[62, "recon_surf.fs_balabels.read_colortables"]], "recon_surf.fs_balabels": [[62, "module-recon_surf.fs_balabels"]], "recon_surf.lta": [[63, "module-recon_surf.lta"]], "writelta() (in module recon_surf.lta)": [[63, "recon_surf.lta.writeLTA"]], "getsurfcorrespondence() (in module recon_surf.map_surf_label)": [[64, "recon_surf.map_surf_label.getSurfCorrespondence"]], "mapsurflabel() (in module recon_surf.map_surf_label)": [[64, "recon_surf.map_surf_label.mapSurfLabel"]], "options_parse() (in module recon_surf.map_surf_label)": [[64, "recon_surf.map_surf_label.options_parse"]], "recon_surf.map_surf_label": [[64, "module-recon_surf.map_surf_label"]], "writesurflabel() (in module recon_surf.map_surf_label)": [[64, "recon_surf.map_surf_label.writeSurfLabel"]], "argument_parse() (in module recon_surf.paint_cc_into_pred)": [[65, "recon_surf.paint_cc_into_pred.argument_parse"]], "paint_in_cc() (in module recon_surf.paint_cc_into_pred)": [[65, "recon_surf.paint_cc_into_pred.paint_in_cc"]], "recon_surf.paint_cc_into_pred": [[65, "module-recon_surf.paint_cc_into_pred"]], "options_parse() (in module recon_surf.rewrite_mc_surface)": [[66, "recon_surf.rewrite_mc_surface.options_parse"]], "recon_surf.rewrite_mc_surface": [[66, "module-recon_surf.rewrite_mc_surface"]], "resafe_surface() (in module recon_surf.rewrite_mc_surface)": [[66, "recon_surf.rewrite_mc_surface.resafe_surface"]], "align_aparc_centroids() (in module recon_surf.rotate_sphere)": [[67, "recon_surf.rotate_sphere.align_aparc_centroids"]], "options_parse() (in module recon_surf.rotate_sphere)": [[67, "recon_surf.rotate_sphere.options_parse"]], "recon_surf.rotate_sphere": [[67, "module-recon_surf.rotate_sphere"]], "construct_adj_cluster() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.construct_adj_cluster"]], "find_all_islands() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.find_all_islands"]], "options_parse() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.options_parse"]], "recon_surf.sample_parc": [[68, "module-recon_surf.sample_parc"]], "replace_labels() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.replace_labels"]], "sample_img() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.sample_img"]], "sample_nearest_nonzero() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.sample_nearest_nonzero"]], "sample_parc() (in module recon_surf.sample_parc)": [[68, "recon_surf.sample_parc.sample_parc"]], "bincount2d_vectorized() (in module recon_surf.smooth_aparc)": [[69, "recon_surf.smooth_aparc.bincount2D_vectorized"]], "get_adjm() (in module recon_surf.smooth_aparc)": [[69, "recon_surf.smooth_aparc.get_adjM"]], "main() (in module recon_surf.smooth_aparc)": [[69, "recon_surf.smooth_aparc.main"]], "mode_filter() (in module recon_surf.smooth_aparc)": [[69, "recon_surf.smooth_aparc.mode_filter"]], "options_parse() (in module recon_surf.smooth_aparc)": [[69, "recon_surf.smooth_aparc.options_parse"]], "recon_surf.smooth_aparc": [[69, "module-recon_surf.smooth_aparc"]], "smooth_aparc() (in module recon_surf.smooth_aparc)": [[69, "recon_surf.smooth_aparc.smooth_aparc"]], "call() (in module recon_surf.spherically_project_wrapper)": [[70, "recon_surf.spherically_project_wrapper.call"]], "recon_surf.spherically_project_wrapper": [[70, "module-recon_surf.spherically_project_wrapper"]], "setup_options() (in module recon_surf.spherically_project_wrapper)": [[70, "recon_surf.spherically_project_wrapper.setup_options"]], "spherical_wrapper() (in module recon_surf.spherically_project_wrapper)": [[70, "recon_surf.spherically_project_wrapper.spherical_wrapper"]]}})